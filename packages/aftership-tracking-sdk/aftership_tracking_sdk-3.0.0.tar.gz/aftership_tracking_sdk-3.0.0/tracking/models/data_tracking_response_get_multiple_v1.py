# coding: utf-8
#
# This code was auto generated by AfterShip SDK Generator.
# Do not edit the class manually.

from __future__ import annotations
import pprint

from pydantic import BaseModel
from typing import Any, Dict, List, Optional
from typing_extensions import Self

from tracking.models.tag_v1 import TagV1
from tracking.models.tracking import Tracking


class DataTrackingResponseGetMultipleV1(BaseModel):
    """
    DataTrackingResponseGetMultipleV1
    """  # noqa: E501

    page: Optional[int] = None
    limit: Optional[int] = None
    count: Optional[int] = None
    keyword: Optional[str] = None
    slug: Optional[str] = None
    origin: Optional[List[str]] = None
    destination: Optional[List[str]] = None
    tag: Optional[TagV1] = None
    created_at_min: Optional[str] = None
    created_at_max: Optional[str] = None
    last_updated_at: Optional[str] = None
    return_to_sender: Optional[List[bool]] = None
    courier_destination_country_iso3: Optional[List[str]] = None
    trackings: Optional[List[Tracking]] = None

    def to_str(self, **kwargs) -> str:
        return pprint.pformat(self.model_dump(**kwargs))

    def to_json(self, **kwargs) -> str:
        return self.model_dump_json(**kwargs)

    def to_dict(self, **kwargs) -> Dict[str, Any]:
        return self.model_dump(**kwargs)

    @classmethod
    def from_json(cls, json_str: str, **kwargs) -> Optional[Self]:
        return cls.model_validate_json(json_str, **kwargs)

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]], **kwargs) -> Optional[Self]:
        return cls.model_validate(obj, **kwargs) if isinstance(obj, Dict) else None
