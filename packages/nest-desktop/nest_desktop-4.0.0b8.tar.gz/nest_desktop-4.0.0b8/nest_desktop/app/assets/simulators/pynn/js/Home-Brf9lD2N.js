import{a as u,_ as m}from"../../../js/StoreList-BOBzKlYb.js";import{d as p,cJ as c,o as f,n as h,w as n,a as e,L as l,O as s,J as y,e as i,cn as _,f as a,P as r,Q as N,g,i as t,co as b,cp as w,cq as P,K as V,H as k,s as o}from"../../../js/index-DCXcuAJz.js";import"../../../js/ImportDialog-1H8cn1XC.js";const x=""+new URL("../../../img/pynn-logo-DcOGhNXp.png",import.meta.url).href,S=o("p",null," PyNN (pronounced 'pine') is a simulator-independent language for building spiking neuronal network models. A PyNN script runs without modification on any simulator or neuromorphic hardware platform that PyNN supports (currently NEURON, NEST, PCSIM, MOOSE, Brian, the BrainScaleS platform and the SpiNNaker platform). ",-1),v=o("p",null," PyNN provides a library of standard neuron, synapse and synaptic plasticity models, which have been verified to work the same on the different supported simulators. PyNN also provides a set of commonly-used connectivity algorithms (e.g. all-to-all, random, distance-dependent, small-world) but makes it easy to provide your own connectivity in a simulator-independent way. ",-1),C=o("p",null," Even if you don't wish to run simulations on multiple simulators, you may benefit from writing your simulation code using PyNN's powerful, high-level interface. In this case, you can use any neuron or synapse model supported by your simulator, and are not restricted to the standard models. ",-1),R=p({__name:"Home",setup(E){const d=c();return(B,L)=>(f(),h(k,null,{default:n(()=>[e(V,null,{default:n(()=>[e(l,{md:"6"},{default:n(()=>[e(s,null,{default:n(()=>[e(y,{src:i(x),alt:"pynn-logo",class:"ma-2 mx-10","max-height":"400"},null,8,["src"]),e(_,null,{default:n(()=>[a(" An integration layer for neural simulation ")]),_:1}),e(r,null,{default:n(()=>[S,v,C]),_:1})]),_:1}),e(s,{class:"mt-2"},{default:n(()=>[e(N,null,{default:n(()=>[a("References")]),_:1}),e(r,null,{default:n(()=>[e(g,null,{default:n(()=>[e(t,{"append-icon":"mdi:mdi-open-in-new",href:"http://neuralensemble.org/PyNN/","prepend-icon":"mdi:mdi-home",target:"_blank"},{default:n(()=>[a(" http://neuralensemble.org/PyNN/ ")]),_:1}),e(t,{"append-icon":"mdi:mdi-open-in-new",href:"https://github.com/NeuralEnsemble/PyNN/","prepend-icon":"mdi:mdi-github",target:"_blank"},{default:n(()=>[a(" https://github.com/NeuralEnsemble/PyNN/ ")]),_:1}),e(t,{"append-icon":"mdi:mdi-open-in-new",href:"http://neuralensemble.org/docs/PyNN/","prepend-icon":"mdi:mdi-book-open",target:"_blank"},{default:n(()=>[a(" http://neuralensemble.org/docs/PyNN/ ")]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),e(l,{md:"6"},{default:n(()=>[e(b,{variant:"accordion"},{default:n(()=>[e(w,{title:"Backend settings"},{default:n(()=>[e(P,null,{default:n(()=>[e(u,{store:i(d)},null,8,["store"])]),_:1})]),_:1})]),_:1}),e(m)]),_:1})]),_:1})]),_:1}))}});export{R as default};
