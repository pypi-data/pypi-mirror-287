[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core", "poetry-dynamic-versioning>=1.2.0,<2.0.0"]

[tool.black]
force-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
  | node_modules
)/
'''
include = '\.pyi?$'
line-length = 100
target-version = ["py310", "py311", "py312", "py39"]

[tool.coverage.report]
exclude_lines = [
  "@overload",
  "cov: ignore", # standard exclude comment
  "if TYPE_CHECKING:", # excluded blocks
  "if __name__ == .__main__.:",
  "raise AssertionError", # defensive exceptions
  "raise NotImplementedError"
]
# fail_under = 100  # TODO (kyle): enable when implementing
precision = 2
show_missing = true

[tool.coverage.run]
branch = false # not correctly reported - https://github.com/nedbat/coveragepy/issues/605
omit = [
  "*/type_defs.py"
]

[tool.poetry]
name = "ghactions"
version = "0.0.0"
description = "A toolkit for developing GitHub Actions."
authors = ["Kyle Finley <kyle@finley.sh>"]
classifiers = [
  # https://pypi.org/classifiers/
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.9"
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/finleyfamily/ghactions"
keywords = []
repository = "https://github.com/finleyfamily/ghactions"
packages = [
  {include = "ghactions"}
]
maintainers = ["Kyle Finley <kyle@finley.sh>"]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"

[tool.poetry.group.docs.dependencies]
doc8 = "^1.1.1"
furo = "^2024.7.18"
sphinx = "^7.4.7"
sphinx-autobuild = "^2024.4.16"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.6.0"
sphinxcontrib-apidoc = "^0.5.0"
sphinxcontrib-jquery = "^4.1"

[tool.poetry.group.lint.dependencies]
black = "^24.4.2"
ruff = "^0.5.5"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-sugar = "^1.0.0"
coverage = "^7.6.0"

[tool.poetry-dynamic-versioning] # poetry self add "poetry-dynamic-versioning[plugin]"
bump = true
enable = false
fix-shallow-repository = true
metadata = false
strict = false # TODO (kyle): enable after initial project setup
style = "pep440"

[tool.pyright]
exclude = [
  "**/.eggs",
  "**/.git",
  "**/.venv",
  "**/__pycache__",
  "**/docs",
  "**/node_modules",
  "**/typings"
]
pythonPlatform = "All"
pythonVersion = "3.10"
reportDuplicateImport = "none"
reportImportCycles = "none"
reportMissingTypeStubs = "none"
reportPrivateUsage = "none"
reportUnknownMemberType = "none"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedImport = "none"
reportUnusedVariable = "none"
strictParameterNoneValue = false
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
venv = ".venv"

[tool.pytest.ini_options]
addopts = [
  "--cov-config=pyproject.toml"
]
markers = [
  "wip: isolate tests currently being worked on."
]
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.ruff] # https://docs.astral.sh/ruff/settings/#top-level
force-exclude = true
line-length = 120
show-fixes = true
target-version = "py310"

[tool.ruff.lint] # https://docs.astral.sh/ruff/settings/#lint
ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
  "COM812", # Trailing comma missing
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D215", # Section underline is over-indented
  "D406", # Section name should end with a newline
  "D407", # Missing dashed underline after section
  "D408", # Section underline should be in the line following the section's name
  "D409", # Section underline should match the length of its name
  "ERA001", # Found commented-out code  # NOTE (kyle): incorrectly detects cspell
  "FIX002", # Line contains TODO
  "TD003", # Missing issue link on the line following this TODO
  "TID252" # Relative imports from parent modules are banned
]
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores] # https://docs.astral.sh/ruff/settings/#lintextend-per-file-ignores
"tests/*" = [
  "FBT001", # Boolean positional arg in function definition - this is fine here
  "FBT003", # Boolean positional value in function call - this is fine here
  "PT004", # Fixture does not return anything, add leading underscore
  "S101", # Use of `assert` detected - this is fine here
  "S108", # Probable insecure usage of temporary file or directory
  "SLF001" # Private member accessed - fine in tests
]

[tool.ruff.lint.pydocstyle] # https://docs.astral.sh/ruff/settings/#lintpydocstyle
convention = "google"
