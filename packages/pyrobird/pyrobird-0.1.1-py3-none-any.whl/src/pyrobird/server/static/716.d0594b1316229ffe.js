"use strict";(self.webpackChunkfirebird=self.webpackChunkfirebird||[]).push([[716],{716:(N,E,o)=>{o.r(E),o.d(E,{drawLeafPlayer:()=>S,drawTree:()=>U,drawTreePlayer:()=>D,drawTreePlayerKey:()=>K});var x=o(467),n=o(6998),B=o(5680),y=o(471),f=o(4779),b=o(9041),_=o(675),C=o(1516),k=o(4149),M=o(1462),A=o(895),W=o(9109),p=o(6714);function T(i,t){if((0,n.isBatchMode)()||typeof document>"u")return;if(!t)return(0,p.Rh)();const e=document.createElement("p"),s=document.createTextNode(t);e.appendChild(s),e.title="Click on element to break",e.onclick=()=>{if(i._break||(i._break=0),++i._break<3)return e.title="Will break after next I/O operation",void(s.nodeValue="Breaking ... ");(0,n.isFunc)(i.Abort)&&i.Abort(),(0,p.Rh)()},(0,p.Rh)(e)}function R(i,t,e){return g.apply(this,arguments)}function g(){return(g=(0,x.A)(function*(i,t,e){const s=t?._typename;return s&&(0,n.isStr)(s)?0===s.indexOf(n.clTH1)?C.TH1Painter.draw(i,t,e):0===s.indexOf(n.clTH2)?k.TH2Painter.draw(i,t,e):0===s.indexOf(n.clTH3)?M.TH3Painter.draw(i,t,e):0===s.indexOf(n.clTGraph)?A.k.draw(i,t,e):s===n.clTPolyMarker3D&&t.$hist?M.TH3Painter.draw(i,t.$hist,e).then(()=>{const r=new _.JW(i,t,e);return r.addToPadPrimitives(),r.redraw=W.Y,r.redraw()}):Promise.reject(Error(`Object of type ${s} cannot be draw with TTree`)):Promise.reject(Error("Object without type cannot be draw with TTree"))})).apply(this,arguments)}function $(i,t){return P.apply(this,arguments)}function P(){return(P=(0,x.A)(function*(i,t){if(t||this.last_pr){if(this.dump||this.testio){if(!t)return;if((0,n.isBatchMode)()){const s=new b.b8(this.drawid);return s.selectDom().property("_json_object_",i),s}if((0,n.isFunc)(n.internals.drawInspector))return n.internals.drawInspector(this.drawid,i);const e=(0,n.create)(n.clTObjString);return e.fString=(0,n.toJSON)(i,2),(0,_.as)(this.drawid,e)}return this.last_pr||(this.last_pr=Promise.resolve(!0)),this.last_pr.then(()=>(this.last_pr=this.obj_painter?this.obj_painter.redrawObject(i).then(()=>this.obj_painter):R(this.drawid,i).then(e=>(this.obj_painter=e,t||(this.last_pr=null),e)),t?this.last_pr:null))}})).apply(this,arguments)}function I(i){return i.draw_first=!0,i.configureOnline=function(t,e,s,r,a){this.setItemName(t,"",this),this.url=e,this.root_version=r,this.askey=s,this.draw_expr=a},i.configureTree=function(t){this.local_tree=t},i.showExtraButtons=function(t){const e=this.selectDom(),s=this.local_tree?.fEntries||0;e.select(".treedraw_more").remove(),e.select(".treedraw_buttons").node().innerHTML+=`Cut: <input class="treedraw_cut ui-corner-all ui-widget" style="width:8em;margin-left:5px" title="cut expression"></input>Opt: <input class="treedraw_opt ui-corner-all ui-widget" style="width:5em;margin-left:5px" title="histogram draw options"></input>Num: <input class="treedraw_number" type='number' min="0" max="${s}" step="1000" style="width:7em;margin-left:5px" title="number of entries to process (default all)"></input>First: <input class="treedraw_first" type='number' min="0" max="${s}" step="1000" style="width:7em;margin-left:5px" title="first entry to process (default first)"></input><button class="treedraw_clear" title="Clear drawing">Clear</button>`,e.select(".treedraw_exe").on("click",()=>this.performDraw()),e.select(".treedraw_cut").property("value",t?.parse_cut||"").on("change",()=>this.performDraw()),e.select(".treedraw_opt").property("value",t?.drawopt||"").on("change",()=>this.performDraw()),e.select(".treedraw_number").attr("value",t?.numentries||""),e.select(".treedraw_first").attr("value",t?.firstentry||""),e.select(".treedraw_clear").on("click",()=>(0,_.tP)(this.drawid))},i.showPlayer=function(t){const e=this.selectDom();this.drawid="jsroot_tree_player_"+n.internals.id_counter+++"_draw";const s=t?.parse_cut||t?.numentries||t?.firstentry;e.html(`<div style="display:flex; flex-flow:column; height:100%; width:100%;"><div class="treedraw_buttons" style="flex: 0 1 auto;margin-top:0.2em;"><button class="treedraw_exe" title="Execute draw expression" style="margin-left:0.5em">Draw</button>Expr:<input class="treedraw_varexp treedraw_varexp_info" style="width:12em;margin-left:5px" title="draw expression"></input><label class="treedraw_varexp_info">\u24d8</label><button class="treedraw_more">More</button></div><div style="flex: 0 1 auto"><hr/></div><div id="${this.drawid}" style="flex: 1 1 auto; overflow:hidden;"></div></div>`),this.setTopPainter(),this.local_tree&&e.select(".treedraw_buttons").attr("title","Tree draw player for: "+this.local_tree.fName),e.select(".treedraw_exe").on("click",()=>this.performDraw()),e.select(".treedraw_varexp").attr("value",t?.parse_expr||this.draw_expr||"px:py").on("change",()=>this.performDraw()),e.select(".treedraw_varexp_info").attr("title","Example of valid draw expressions:\n  px - 1-dim draw\n  px:py - 2-dim draw\n  px:py:pz - 3-dim draw\n  px+py:px-py - use any expressions\n  px:py>>Graph - create and draw TGraph\n  px:py>>dump - dump extracted variables\n  px:py>>h(50,-5,5,50,-5,5) - custom histogram\n  px:py;hbins:100 - custom number of bins"),s?this.showExtraButtons(t):e.select(".treedraw_more").on("click",()=>this.showExtraButtons(t)),this.checkResize(),(0,p.d7)(this)},i.getValue=function(t){const e=this.selectDom().select(t);if(e.empty())return;const s=e.property("value");return void 0!==s?s:e.attr("value")},i.performLocalDraw=function(){if(!this.local_tree)return;const t=this.selectDom(),e={expr:this.getValue(".treedraw_varexp")};t.select(".treedraw_more").empty()&&(e.cut=this.getValue(".treedraw_cut"),e.cut||delete e.cut,e.drawopt=this.getValue(".treedraw_opt"),"dump"===e.drawopt&&(e.dump=!0,e.drawopt=""),e.drawopt||delete e.drawopt,e.numentries=parseInt(this.getValue(".treedraw_number")),Number.isInteger(e.numentries)||delete e.numentries,e.firstentry=parseInt(this.getValue(".treedraw_first")),Number.isInteger(e.firstentry)||delete e.firstentry),(0,_.tP)(this.drawid),e.drawid=this.drawid,e.progress=$.bind(e),(0,f.treeDraw)(this.local_tree,e).then(s=>e.progress(s,!0))},i.getDrawOpt=function(){let t="player";const e=this.getValue(".treedraw_varexp");return e&&(t+=":"+e),t},i.performDraw=function(){if(this.local_tree)return this.performLocalDraw();const t=this.selectDom();let e=this.url+"/exe.json.gz?compact=3&method=Draw",s=this.getValue(".treedraw_varexp"),r="h_tree_draw",a="";const d=s.indexOf(">>");if(d<0)s+=`>>${r}`;else{r=s.slice(d+2),"+"===r[0]&&(r=r.slice(1));const u=r.indexOf("(");u>0&&(r=r.slice(0,u))}if(t.select(".treedraw_more").empty()){const u=this.getValue(".treedraw_cut");let h=this.getValue(".treedraw_number"),c=this.getValue(".treedraw_first");a=this.getValue(".treedraw_opt"),e+=`&prototype="const char*,const char*,Option_t*,Long64_t,Long64_t"&varexp="${s}"&selection="${u}"`,h||(h="TTree::kMaxEntries"),c||(c="0"),e+=`&option="${a}"&nentries=${h}&firstentry=${c}`}else e+=`&prototype="Option_t*"&opt="${s}"`;e+=`&_ret_object_=${r}`;const l=()=>{(0,n.httpRequest)(e,"object").then(u=>{(0,_.tP)(this.drawid),R(this.drawid,u,a)})};this.draw_expr=s,this.askey?(this.askey=!1,(0,n.httpRequest)(this.url+"/root.json.gz?compact=3","text").then(l)):l()},i.checkResize=function(){(0,_.XR)(this.drawid)},i}function D(i,t,e,s){let r=i.findItem(t),a="",d=0;const l=i.getTopOnlineItem(r);if(!r||!l)return null;if(s){for(a=r._name;r&&!r._ttree;)r=r._parent;if(!r)return null;t=i.itemFullName(r)}const u=i.getOnlineItemUrl(t);if(!u)return null;const h=l._root_version||400129,c=i.getDisplay();if(!c)return null;const L=c.findFrame(t,!0);if(!L)return null;const V=(0,B.Lt)(L).attr("id"),w=new b.b8(V);if(r._childs&&!s)for(let O=0;O<r._childs.length;++O){const m=r._childs[O];m&&m._kind&&0===m._kind.indexOf(n.prROOT+"TLeaf")&&d<2&&(d++>0&&(a+=":"),a+=m._name)}return I(w),w.configureOnline(t,u,e,h,a),w.showPlayer(),w}function K(i,t){return D(i,t,!0)}function S(i,t){return D(i,t,!1,!0)}function U(i,t,e){return v.apply(this,arguments)}function v(){return(v=(0,x.A)(function*(i,t,e){let a,d,s=t,r=e;if(t._typename===f.clTBranchFunc?(r={expr:`.${t.func}()`,branch:t.branch},e&&0===e.indexOf("dump")?r.expr+=">>"+e:e&&(r.expr+=e),s=t.branch.$tree):t.$branch?(r={expr:`.${t.fName}${e||""}`,branch:t.$branch},(r.branch.fType===f.kClonesNode||r.branch.fType===f.kSTLNode)&&(r.expr=e,r.direct_branch=!0),s=t.$branch.$tree):t.$tree?(!e&&t.fStreamerType&&t.fStreamerType!==y.V$&&t.fStreamerType>=y.Ph&&t.fStreamerType<=y.Ql&&(e="dump"),r={expr:e,branch:t},s=t.$tree):(r||(r="player"),(0,n.isStr)(r)&&(r={expr:r})),!s)throw Error("No TTree object available for TTree::Draw");if((0,n.isStr)(r.expr)){const l=r.expr.indexOf("player");0===l?(r.player=!0,r.expr=r.expr.slice(6),":"===r.expr[0]&&(r.expr=r.expr.slice(1))):l>=0&&l===r.expr.length-6&&(r.player=!0,r.expr=r.expr.slice(0,l),l>0&&";"===r.expr[l-1]&&(r.expr=r.expr.slice(0,l-1)))}if(r.player?(a=new _.JW(i,t,e),I(a),a.configureTree(s),a.showPlayer(r),r.drawid=a.drawid):r.drawid=i,r.progress=$.bind(r),"testio"===r.expr)r.testio=!0,r.showProgress=l=>T(r,l),d=(0,f.treeIOTest)(s,r);else{if(!r.expr&&!r.branch)return a;d=(0,f.treeDraw)(s,r)}return d.then(l=>r.progress(l,!0))})).apply(this,arguments)}f.TDrawSelector.prototype.ShowProgress=function(i){if(void 0===i||!Number.isFinite(i))return(0,p.Rh)();if(this._break)return T(this,"Breaking ... "),"break";if(this.last_progress!==i){const e=i-this.last_progress;this.aver_diff||(this.aver_diff=e),this.aver_diff=.3*e+.7*this.aver_diff}this.last_progress=i;let t=0;this.aver_diff<=0?t=0:this.aver_diff<1e-4?t=3:this.aver_diff<.001?t=2:this.aver_diff<.01&&(t=1),T(this,`TTree draw ${(100*i).toFixed(t)} % `)}}}]);