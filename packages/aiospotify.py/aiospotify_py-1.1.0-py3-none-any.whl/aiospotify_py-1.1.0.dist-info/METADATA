Metadata-Version: 2.1
Name: aiospotify.py
Version: 1.1.0
Summary: An asynchronous Python 3.10+ Spotify Web API wrapper.
Keywords: spotify,api,async,asynchronous
Author: novanai
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Requires-Dist: aiohttp==3.9.5
Requires-Dist: pydantic==2.8.2
Requires-Dist: nox==2024.4.15 ; extra == "dev"
Requires-Dist: mkdocs==1.6.0 ; extra == "dev.docs"
Requires-Dist: mkdocs-material==9.5.30 ; extra == "dev.docs"
Requires-Dist: mkdocs-minify-plugin==0.8.0 ; extra == "dev.docs"
Requires-Dist: mkdocstrings-python==1.10.5 ; extra == "dev.docs"
Requires-Dist: ruff==0.5.4 ; extra == "dev.format"
Requires-Dist: flit==3.9.0 ; extra == "dev.release"
Requires-Dist: pyright==1.1.373 ; extra == "dev.typecheck"
Project-URL: Documentation, https://aiospotifypy.readthedocs.io/en/stable/
Project-URL: Issues, https://github.com/novanai/aiospotify.py/issues
Project-URL: Repository, https://github.com/novanai/aiospotify.py
Provides-Extra: dev
Provides-Extra: dev.docs
Provides-Extra: dev.format
Provides-Extra: dev.release
Provides-Extra: dev.typecheck

# aiospotify.py

An asynchronous Python 3.10+ Spotify Web API wrapper.

* **Documentation:** <https://aiospotifypy.readthedocs.io/en/stable/>
* **Examples**: <https://github.com/novanai/aiospotify.py/tree/master/examples>

## Installation

```bash
pip install -U aiospotify.py
```

## Getting Started

```py
import asyncio
import spotify

async def main():
    # Setup an API client
    auth = await spotify.ClientCredentialsFlow.build_from_access_token(
        "CLIENT_ID",
        "CLIENT_SECRET",
    )
    api = spotify.API(auth)

    # Get details about a Spotify artist
    artist = await api.get_artist("0e86yPdC41PGRkLp2Q1Bph")
    print(artist.name)  # "Mother Mother"


asyncio.run(main())
```

## To-Do List

* [ ] Add extra methods to Paginator *(for fetching all items, lazy iteration etc)*
* [ ] URI helper class
* [ ] Automatically handle 429's (Too Many Requests)

