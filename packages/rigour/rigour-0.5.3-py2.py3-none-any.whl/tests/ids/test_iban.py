import pytest
from rigour.ids import IBAN

TEST_IBANS = [
    (True, "GB29 NWBK 6016 1331 9268 19"),
    (True, "GB29NWBK60161331926819"),
    (False, "GB28 NWBK 6016 1331 9268 19"),
    (False, "GB29NWBKN0161331926819"),
    (False, ""),
    (True, "AL35202111090000000001234567"),
    (True, "AD1400080001001234567890"),
    (True, "AT483200000012345864"),
    (True, "AZ96AZEJ00000000001234567890"),
    (True, "BH02CITI00001077181611"),
    (True, "BY86AKBB10100000002966000000"),
    (True, "BE71096123456769"),
    (True, "BA275680000123456789"),
    (True, "BR1500000000000010932840814P2"),
    (True, "BG18RZBB91550123456789"),
    # (False, "CR37012600000123456789"),
    (True, "HR1723600001101234565"),
    (True, "CY21002001950000357001234567"),
    (True, "CZ5508000000001234567899"),
    (True, "DK9520000123456789"),
    (True, "DO22ACAU00000000000123456789"),
    # (False, "SV43ACAT00000000000000123123"),
    (True, "EE471000001020145685"),
    (True, "FO9264600123456789"),
    (True, "FI1410093000123458"),
    (True, "FR7630006000011234567890189"),
    (True, "GE60NB0000000123456789"),
    (True, "DE91100000000123456789"),
    (True, "GI04BARC000001234567890"),
    (True, "GR9608100010000001234567890"),
    (True, "GL8964710123456789"),
    (True, "GT20AGRO00000000001234567890"),
    (True, "HU93116000060000000012345676"),
    (True, "IS030001121234561234567890"),
    # (False, "IQ20CBIQ861800101010500"),
    (True, "IE64IRCE92050112345678"),
    (True, "IL170108000000012612345"),
    (True, "IT60X0542811101000000123456"),
    (True, "JO71CBJO0000000000001234567890"),
    (True, "KZ563190000012344567"),
    (True, "XK051212012345678906"),
    (True, "KW81CBKU0000000000001234560101"),
    (True, "LV97HABA0012345678910"),
    (True, "LB92000700000000123123456123"),
    (True, "LI7408806123456789012"),
    (True, "LT601010012345678901"),
    (True, "LU120010001234567891"),
    (True, "MK07200002785123453"),
    (True, "MT31MALT01100000000000000000123"),
    (True, "MR1300020001010000123456753"),
    (True, "MU43BOMM0101123456789101000MUR"),
    (True, "MD21EX000000000001234567"),
    (True, "MC5810096180790123456789085"),
    (True, "ME25505000012345678951"),
    (True, "NL02ABNA0123456789"),
    (True, "NO8330001234567"),
    (True, "PK36SCBL0000001123456702"),
    (True, "PS92PALS000000000400123456702"),
    (True, "PL10105000997603123456789123"),
    (True, "PT50002700000001234567833"),
    (True, "QA54QNBA000000000000693123456"),
    (True, "RO09BCYP0000001234567890"),
    (True, "LC14BOSL123456789012345678901234"),
    (True, "SM76P0854009812123456789123"),
    (True, "ST23000200000289355710148"),
    (True, "SA4420000001234567891234"),
    (True, "RS35105008123123123173"),
    (True, "SC52BAHL01031234567890123456USD"),
    (True, "SK8975000000000012345671"),
    (True, "SI56192001234567892"),
    (True, "ES7921000813610123456789"),
    (True, "SE1412345678901234567890"),
    (True, "CH5604835012345678009"),
    (True, "TL380080012345678910157"),
    (True, "TN4401000067123456789123"),
    (True, "TR320010009999901234567890"),
    (True, "UA903052992990004149123456789"),
    (True, "AE460090000000123456789"),
    (True, "GB98MIDL07009312345678"),
    (True, "VG21PACG0000000123456789"),
]

@pytest.mark.parametrize("valid, iban", TEST_IBANS)
def test_iban_valid(valid, iban):
    assert IBAN.is_valid(iban) == valid
