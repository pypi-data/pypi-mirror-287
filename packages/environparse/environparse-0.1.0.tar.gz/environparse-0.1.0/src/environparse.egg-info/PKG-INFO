Metadata-Version: 2.1
Name: environparse
Version: 0.1.0
Summary: Environment variable parsing library.
License: 木兰宽松许可证， 第2版
        
        2020年1月 http://license.coscl.org.cn/MulanPSL2
        
        您对“软件”的复制、使用、修改及分发受木兰宽松许可证，第2版（“本许可证”）的如下条款的约束：
        
        0.   定义
        
        “软件” 是指由“贡献”构成的许可在“本许可证”下的程序和相关文档的集合。
        
        “贡献” 是指由任一“贡献者”许可在“本许可证”下的受版权法保护的作品。
        
        “贡献者” 是指将受版权法保护的作品许可在“本许可证”下的自然人或“法人实体”。
        
        “法人实体” 是指提交贡献的机构及其“关联实体”。
        
        “关联实体” 是指，对“本许可证”下的行为方而言，控制、受控制或与其共同受控制的机构，此处的控制是指有受控方或共同受控方至少50%直接或间接的投票权、资金或其他有价证券。
        
        1.   授予版权许可
        
        每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的版权许可，您可以复制、使用、修改、分发其“贡献”，不论修改与否。
        
        2.   授予专利许可
        
        每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的（根据本条规定撤销除外）专利许可，供您制造、委托制造、使用、许诺销售、销售、进口其“贡献”或以其他方式转移其“贡献”。前述专利许可仅限于“贡献者”现在或将来拥有或控制的其“贡献”本身或其“贡献”与许可“贡献”时的“软件”结合而将必然会侵犯的专利权利要求，不包括对“贡献”的修改或包含“贡献”的其他结合。如果您或您的“关联实体”直接或间接地，就“软件”或其中的“贡献”对任何人发起专利侵权诉讼（包括反诉或交叉诉讼）或其他专利维权行动，指控其侵犯专利权，则“本许可证”授予您对“软件”的专利许可自您提起诉讼或发起维权行动之日终止。
        
        3.   无商标许可
        
        “本许可证”不提供对“贡献者”的商品名称、商标、服务标志或产品名称的商标许可，但您为满足第4条规定的声明义务而必须使用除外。
        
        4.   分发限制
        
        您可以在任何媒介中将“软件”以源程序形式或可执行形式重新分发，不论修改与否，但您必须向接收者提供“本许可证”的副本，并保留“软件”中的版权、商标、专利及免责声明。
        
        5.   免责声明与责任限制
        
        “软件”及其中的“贡献”在提供时不带任何明示或默示的担保。在任何情况下，“贡献者”或版权所有者不对任何人因使用“软件”或其中的“贡献”而引发的任何直接或间接损失承担责任，不论因何种原因导致或者基于何种法律理论,即使其曾被建议有此种损失的可能性。
        
        6.   语言
        
        “本许可证”以中英文双语表述，中英文版本具有同等法律效力。如果中英文版本存在任何冲突不一致，以中文版为准。
        
        
        Mulan Permissive Software License，Version 2 (Mulan PSL v2)
        
        January 2020 http://license.coscl.org.cn/MulanPSL2
        
        Your reproduction, use, modification and distribution of the Software shall be subject to Mulan PSL v2 (this License) with the following terms and conditions:
        
        0. Definition
        
        Software means the program and related documents which are licensed under this License and comprise all Contribution(s).
        
        Contribution means the copyrightable work licensed by a particular Contributor under this License.
        
        Contributor means the Individual or Legal Entity who licenses its copyrightable work under this License.
        
        Legal Entity means the entity making a Contribution and all its Affiliates.
        
        Affiliates means entities that control, are controlled by, or are under common control with the acting entity under this License, ‘control’ means direct or indirect ownership of at least fifty percent (50%) of the voting power, capital or other securities of controlled or commonly controlled entity.
        
        1. Grant of Copyright License
        
        Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable copyright license to reproduce, use, modify, or distribute its Contribution, with modification or not.
        
        2. Grant of Patent License
        
        Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable (except for revocation under this Section) patent license to make, have made, use, offer for sale, sell, import or otherwise transfer its Contribution, where such patent license is only limited to the patent claims owned or controlled by such Contributor now or in future which will be necessarily infringed by its Contribution alone, or by combination of the Contribution with the Software to which the Contribution was contributed. The patent license shall not apply to any modification of the Contribution, and any other combination which includes the Contribution. If you or your Affiliates directly or indirectly institute patent litigation (including a cross claim or counterclaim in a litigation) or other patent enforcement activities against any individual or entity by alleging that the Software or any Contribution in it infringes patents, then any patent license granted to you under this License for the Software shall terminate as of the date such litigation or activity is filed or taken.
        
        3. No Trademark License
        
        No trademark license is granted to use the trade names, trademarks, service marks, or product names of Contributor, except as required to fulfill notice requirements in section 4.
        
        4. Distribution Restriction
        
        You may distribute the Software in any medium with or without modification, whether in source or executable forms, provided that you provide recipients with a copy of this License and retain copyright, patent, trademark and disclaimer statements in the Software.
        
        5. Disclaimer of Warranty and Limitation of Liability
        
        THE SOFTWARE AND CONTRIBUTION IN IT ARE PROVIDED WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL ANY CONTRIBUTOR OR COPYRIGHT HOLDER BE LIABLE TO YOU FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO ANY DIRECT, OR INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING FROM YOUR USE OR INABILITY TO USE THE SOFTWARE OR THE CONTRIBUTION IN IT, NO MATTER HOW IT’S CAUSED OR BASED ON WHICH LEGAL THEORY, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
        
        6. Language
        
        THIS LICENSE IS WRITTEN IN BOTH CHINESE AND ENGLISH, AND THE CHINESE VERSION AND ENGLISH VERSION SHALL HAVE THE SAME LEGAL EFFECT. IN THE CASE OF DIVERGENCE BETWEEN THE CHINESE AND ENGLISH VERSIONS, THE CHINESE VERSION SHALL PREVAIL.
        
Keywords: env,environ,environment,parse,parser,argparse,optparse,envparse
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: rich<14,>=13
Requires-Dist: attrs<24,>=23

# `environparse`

Environment variable parsing library, inspired by stdlib `argparse`.

## Features:

- Handles both optional and required environment variable.
- Automatically multi-language support.
    - Currently supported 5 languages: en, zh_CN, zh_SG, zh_HK, zh_TW.
- ~~And more features that have not yet been implemented.~~

## Install

Available on [PyPI](https://pypi.org/project/environparse).

The release page also provided wheel package to download.

## Example

Consider the following demo script, it will start an HTTP server with specified options from environment variables:

```python
import contextlib
import http.server
import socket
from pathlib import Path
from pprint import pprint

import environparse

parser = environparse.EnvironmentVariableParser(
    description='An script to start a http server, but use `envparse` to demonstrate the option parsing.',
    epilog='This is the epilog.'
)
parser.defineOption(
    'BIND_ADDRESS',
    action=environparse.Action.STRING,
    description='Bind to a specified address. Leave empty to bind all interfaces.'
)
parser.defineOption(
    'BIND_PORT',
    action=environparse.Action.INTEGER,
    description='Bind to a specified port.',
    default=1425
)
parser.defineOption(
    'ROOTDIR',
    dest='rootdir',
    action=environparse.Action.PATH,
    description='Serve a specified directory.',
    default=Path.cwd()
)

if __name__ == '__main__':
    consumed_env_names, options = parser.parseOptions()

    print('Consumed names of environment variables:', consumed_env_names)
    print('Parsed options:')
    pprint(options)


    class DualStackHTTPServer(http.server.ThreadingHTTPServer):
        def server_bind(self) -> None:
            with contextlib.suppress(Exception):
                self.socket.setsockopt(
                    socket.IPPROTO_IPV6,
                    socket.IPV6_V6ONLY,
                    0
                )
            return super().server_bind()

        def finish_request(self, request, client_address) -> None:
            self.RequestHandlerClass(request, client_address, self, directory=options['rootdir'])


    http.server.test(
        HandlerClass=http.server.SimpleHTTPRequestHandler,
        ServerClass=DualStackHTTPServer,
        port=options['BIND_PORT'],
        bind=options['BIND_ADDRESS'],
        protocol='HTTP/1.0'
    )
```

After install `environparse`, run the script with environment variable `HELP` to get more information:

```sh-session
$ > pwd
/tmp
$ > LANGUAGE=en_GB.UTF-8 HELP= python /tmp/scratch.py
Usage: [ENVS]... scratch.py [ARGS]...

An script to start a http server, but use `envparse` to demonstrate the option parsing.

The following environment variables will be preemptively parsed and exit after performing the operation:
    HELP=[...]    Show this help message and exit.

Unless otherwise stated, all options are optional by default.
List of available environment variables [ENVS]:
    BIND_ADDRESS=[STRING]    Bind to a specified address. Leave empty to bind all interfaces.
                             [Default: <Empty>]                                              
    BIND_PORT=[INTEGER]      Bind to a specified port.                                       
                             [Default: 1425]                                                 
    ROOTDIR=[PATH]           Serve a specified directory.                                    
                             [Default: /tmp]                                                 
This is the epilog.
$ >
```

`environparse` even support localization:

```sh-session
$ > LANGUAGE=zh_CN.UTF-8 HELP= python /tmp/scratch.py
用法：[环境变量]... scratch.py [参数]...

An script to start a http server, but use `envparse` to demonstrate the option parsing.

以下环境变量将被抢先解析，并在运行操作后退出：
    HELP=[...]    显示此帮助信息并退出。

除非另有说明，所有选项默认都是可选的。
可用的 [环境变量] 列表：
    BIND_ADDRESS=[字符串]    Bind to a specified address. Leave empty to bind all interfaces.
                             [默认值：<空>]                                                  
    BIND_PORT=[整数]         Bind to a specified port.                                       
                             [默认值：1425]                                                  
    ROOTDIR=[PATH]           Serve a specified directory.                                    
                             [默认值：/tmp]                                                  
This is the epilog.
$ >
```

Now, try to test the HTTP server:

```sh-session
$ > ROOTDIR="$HOME" BIND_ADDRESS='127.127.127.127' python /tmp/scratch.py
Consumed names of environment variables:
['BIND_ADDRESS', 'ROOTDIR']
Parsed options:
{'BIND_ADDRESS': '127.127.127.127', 'BIND_PORT': 1425, 'rootdir': PosixPath('/home/user')}
Starting the HTTP server...
Serving HTTP on 127.127.127.127 port 1425 (http://127.127.127.127:1425/) ...
127.0.0.1 - - [27/Jul/2024 01:35:59] "GET /Music/EXEC_HYMME_SEAMLESSECHO%3DH_D_.%20-%20stellatram.flac HTTP/1.1" 200 -
127.0.0.1 - - [27/Jul/2024 01:36:45] "GET /Music/%E3%82%B3%E3%83%BC%E3%83%89%E3%83%BB%E3%82%A8%E3%83%86%E3%82%B9%E3%82%A6%E3%82%A7%E3%82%A4%28Class__ETHES_WEI%3D_extends.COMMUNI_SAT_.%29%20-%20%E9%9C%9C%E6%9C%88%E3%81%AF%E3%82%8B%E3%81%8B.flac HTTP/1.1" 200 -
127.0.0.1 - - [27/Jul/2024 01:57:04] "GET /Music/%E7%A5%AD%E6%9E%9C%E3%81%A6%E3%81%AE%E8%8A%B1%20-%20%E4%B8%AD%E6%81%B5%E5%85%89%E5%9F%8E%E3%80%81%E9%9C%9C%E6%9C%88%E3%81%AF%E3%82%8B%E3%81%8B.flac HTTP/1.1" 200 -
^C
Keyboard interrupt received, exiting.
$ >
```

# Changelog

All notable changes to this project will be documented in this file.

This project adheres to [PyPI Version Specification](https://packaging.python.org/en/latest/specifications/version-specifiers).

## 0.1.0 - 2024-07-26

The initial release.
