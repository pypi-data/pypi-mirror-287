[project]
name = "async-wrapper"
version = "0.9.0"
description = "async wrapper"
authors = [{ name = "phi", email = "phi.friday@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Framework :: AnyIO",
    "Framework :: AsyncIO",
    "Framework :: Trio",
]
requires-python = ">= 3.9"
dependencies = [
    "typing-extensions>=4.4.0",
    "anyio>=4.0.0",
    "sniffio>=1.3.1",
    "exceptiongroup; python_version < '3.11'",
]

[project.urls]
Documentation = "https://async-wrapper.readthedocs.io/"
Repository = "https://github.com/phi-friday/async-wrapper"

[project.optional-dependencies]
uvloop = ["uvloop; platform_system != 'Windows'"]
sqlalchemy = ["sqlalchemy[asyncio]", "greenlet"]
test = [
    "pytest>=8.0.0",
    "trio>=0.24.0",
    "pytest-cov>=4.1.0",
    "aiosqlite>=0.20.0",
]
docs = [
    "sphinx>=7.1.0",
    "readthedocs-sphinx-search>=0.3.2",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-mdinclude>=0.5.3",
]

[tool.rye]
managed = true
dev-dependencies = [
    "ruff==0.5.5",
    "ipykernel>=6.29.0",
    "pre-commit>=3.5.0",
    "async_wrapper[uvloop,sqlalchemy,test]",
]

[tool.rye.scripts]
html = { cmd = "make html" }
lint = { chain = ["lint:check", "lint:format"] }
"lint:check" = "ruff check src tests --fix"
"lint:format" = "ruff format src tests"
check = "pre-commit run --all-files --show-diff-on-failure"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/async_wrapper"]

[tool.pyright]
include = ["src", "tests"]
pythonVersion = '3.8'
pythonPlatform = 'Linux'
diagnostic = 'strict'
reportPrivateUsage = false

[tool.pytest.ini_options]
addopts = "--cov=src/async_wrapper --cov-report html --cov-report=xml"
testpaths = ["tests"]

[tool.coverage.run]
omit = ["./tests/**/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
