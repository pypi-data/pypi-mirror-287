"""Test JENN utilities."""
import numpy as np
import pytest 
from copy import deepcopy
from typing import List

import jenn


class TestJMP: 
    """Test load JMP model."""

    @pytest.fixture
    def data(self) -> jenn.core.data.Dataset:
        """Return XOR test data."""
        X_test = np.array(
            [
                [
                    -0.85388257, -0.21312349,  0.44916926,  1.01380573, -0.87866035,
                    -0.67761144,  1.02981699,  0.45752422, -0.52774684, -0.31258505,
                    -0.35771227, -0.06036744,  0.33899093,  0.45849594, -0.04894947,
                    -0.0296373 , -0.48342826, -0.58568435, -0.22098942, -0.79245459,
                    -0.92119571,  0.87510908,  1.38042363,  1.13083034, -0.90708625,
                    -0.25171402,  0.42218279,  0.30205123, -0.15500166, -0.96861323,
                    1.44976086, -0.69511998,  1.0855905 , -0.72277301,  1.02463841,
                    0.18173578,  1.05181798,  0.37741095,  0.10895481,  0.78022805,
                    -0.83350338,  0.53580696,  1.02710883, -0.39389493,  1.16136555,
                    0.72297038, -0.85022879, -0.42682171,  0.39251163, -0.86350836,
                    -0.60403833,  0.02666369,  1.14361333,  0.83612913,  0.52021368,
                    1.39984076,  0.22642432,  1.11599313,  0.92186359,  0.1916543 ,
                    1.07849259,  0.87710211,  0.28290201, -0.49484107, -0.36281129,
                    0.04303006,  0.78117849, -0.50337401,  0.89171538,  1.46258214,
                    0.319507  , -0.77193019, -0.42958014,  0.4226379 ,  1.38547558,
                    -0.98492462,  1.00459835,  1.46196882, -0.34643621, -0.52515051,
                    1.43309284, -0.65420711,  1.35104539,  1.33447251, -0.55853426,
                    1.42937025,  0.57322511,  1.14873689, -0.94771104, -0.55941   ,
                    -0.75635379,  1.47393011,  0.23514355, -0.17597316,  1.29737779,
                    0.65525202, -0.96609996, -0.98655252,  1.40498166,  0.77033608,
                    1.46005454, -0.57554544,  1.48242006,  0.23998839,  1.26788254,
                    1.15736401,  0.93101125, -0.1479482 ,  0.95712487,  1.07953761,
                    -0.636841  , -0.70787446, -0.20127113, -0.28606693, -0.14090438,
                    -0.07509109, -0.44103962, -0.86732953, -0.6392071 ,  1.23106733,
                    1.16042354,  0.61249257, -0.69129704,  0.92239133, -0.56796872,
                    -0.74080133,  0.7775963 ,  0.83532807, -0.92482338, -0.2469714 ,
                    1.03517746, -0.69147198,  1.16060277, -0.96906206, -0.84982563,
                    -0.56072174,  0.83801988,  1.38422875,  1.21904507,  0.15058586,
                    -0.5171428 , -0.722182  , -0.34693586, -0.90949282,  1.06135044,
                    1.42090722, -0.90768938,  1.30841689, -0.23223649,  0.85707879,
                    0.3223956 ,  1.01178485,  0.18652946, -0.25332522,  1.25717487,
                    -0.07177134,  0.33239674, -0.37533598,  1.07208346,  0.15557016,
                    -0.57042393, -0.94101364,  1.3998789 ,  0.7173335 ,  0.35092884,
                    -0.34676288, -0.54590945, -0.53520617, -0.33913852, -0.06004977,
                    0.85886736, -0.02243599, -0.9509104 ,  0.44841624,  1.2112    ,
                    0.91008431,  0.90496757,  0.818448  , -0.92795933,  0.96629465,
                    0.42003576,  0.651332  ,  1.35513807,  1.38910493,  0.77446145,
                    1.48500142,  0.44153998,  0.28116313,  1.48193982, -0.23530375,
                    0.12921595,  0.06589781, -0.80508773, -0.10837748,  0.68418635,
                    1.29587581, -0.01602049,  1.16998284,  0.98581081,  0.13716044
                ],
                [ 
                    0.70584671,  0.32707213, -0.06537791, -0.36930113, -0.7309133 ,
                    1.03196613, -0.41903698,  0.55730005, -0.64162666,  0.59274661,
                    1.46988752,  0.77457114,  0.43314518, -0.00960491,  1.19566729,
                    0.03413492, -0.0596679 ,  1.10392238,  0.96635825,  0.63311945,
                    1.4689233 , -0.92239259,  0.23773989,  0.80030711,  0.62547168,
                    0.22544514, -0.28859974, -0.10994155,  0.8842363 ,  0.15671657,
                    0.99727958, -0.26659954,  0.47972627, -0.48289179,  0.14702161,
                    0.83098953,  0.02306446, -0.07623872,  0.66702554,  0.94252002,
                    -0.30471597, -0.81146869,  0.14792992,  0.02665197,  0.01175855,
                    -0.04914983, -0.42408072, -0.77740137,  0.30312419, -0.57882155,
                    -0.80498233, -0.02535557, -0.37664054,  0.49698573,  1.14516291,
                    -0.63117289,  0.9777901 , -0.69167865, -0.03202841,  0.56216835,
                    0.33912096,  0.57293151,  0.60245418,  1.21829389,  0.66893361,
                    -0.83200793,  0.414902  , -0.84733973, -0.06163014,  1.05531581,
                    1.48729237, -0.16512314,  0.46608977, -0.48720807,  1.4993005 ,
                    0.52292423,  1.4231375 ,  0.24076066,  1.07020139,  0.00820213,
                    1.08790457,  0.372987  ,  0.26926636, -0.2145379 ,  0.48248128,
                    -0.81013128,  0.32774178,  0.40018056,  0.2658243 ,  1.3358539 ,
                    0.98109689,  1.12619299, -0.8043495 , -0.98595469, -0.14722604,
                    1.39503087, -0.49903162, -0.0231047 ,  0.79583026,  0.60084234,
                    1.43176757, -0.17275192, -0.97148626, -0.51262894,  1.34983951,
                    1.48370625,  0.44243449,  0.4541575 ,  0.65890689,  0.84869015,
                    -0.57097805, -0.88349813,  1.35022832,  0.92482227,  0.48031008,
                    0.70833602, -0.03756155,  1.14747416, -0.73604769, -0.18513245,
                    -0.7711863 , -0.89711079, -0.40102599,  0.98470681,  1.27508677,
                    0.59121187, -0.51454455,  0.24016177,  0.77118436,  1.28933681,
                    0.16770774,  0.3126297 , -0.26568146,  0.80098946,  0.91301607,
                    -0.334289  ,  0.37628575,  1.07799505,  1.06565977, -0.63012558,
                    -0.81804952,  0.04202562, -0.35449694,  0.6088779 , -0.88392733,
                    -0.39291433,  0.88953496,  1.46578965, -0.77459056,  0.24604013,
                    -0.55543059,  1.48734123,  1.46613324,  0.60908376, -0.87984002,
                    -0.02234686,  1.31534226,  0.27558971, -0.99143453, -0.42682756,
                    0.46938185, -0.73824861,  0.08802077,  1.49630372, -0.34480366,
                    -0.39538368, -0.72303884,  0.78412999, -0.98669878, -0.68840753,
                    -0.09769413, -0.8622863 , -0.36551355, -0.34183754, -0.02696218,
                    1.40654959,  0.09298157,  1.49419392,  0.41114188, -0.54700497,
                    1.14592384,  0.68549117,  0.33636571, -0.8290815 ,  0.12876986,
                    -0.21419692, -0.70364445,  1.05196719,  0.23994899,  1.06160741,
                    -0.0827909 ,  0.07695219,  0.56414284, -0.87975252,  1.27701342,
                    -0.47826696,  0.41698025, -0.13942863,  0.83724912, -0.99084461
                ]
            ]
        )
        Y_test = np.array(
            [
                [
                    17.89267586, 22.51157699, 20.5322431 , 18.01517972, 15.27084986,
                    16.11823889, 20.14485078, 39.52476115, 36.83377383, 32.63038502,
                    38.37290301,  9.77663908, 34.73779838, 19.89041309,  8.55336001,
                    0.40404585, 20.87767777, 22.2042555 ,  9.39254458, 25.09413322,
                    24.01729587,  5.70621499, 28.50040709, 12.00340616, 19.9203284 ,
                    18.68516462, 31.49142742, 15.60833364,  7.7158602 ,  5.62529529,
                    22.60374527, 24.97564248, 22.73914615, 32.40025606,  5.16287515,
                    11.69278535,  1.73702849, 18.45115818, 17.69042741, 10.25432891,
                    19.14891231, 26.9266642 ,  5.23896782, 18.15455291,  6.09055995,
                    12.6883345 , 23.8969514 , 28.03478842, 31.32696431, 23.33665146,
                    25.56496412,  0.26799846, 22.39560684, 25.79296222, 25.38049647,
                    37.2337828 ,  9.62866039, 17.84713777,  2.23378988, 26.01510927,
                    17.78140022, 22.90203083, 30.49416044, 29.74485167, 31.96458847,
                    6.1296494 , 27.44017137, 25.22731222,  3.76599656, 23.57567306,
                    36.51200913, 14.16583046, 39.21266089, 39.2254194 , 41.68818623,
                    21.18479916, 21.89504004, 31.33097352, 17.91771313, 20.1645265 ,
                    23.85349722, 33.21014334, 29.03627958, 24.67894326, 39.81550159,
                    28.04185098, 34.0888589 , 23.63470096, 12.49631087, 36.54531391,
                    11.20595862, 26.28905857, 16.42127219,  6.55664841, 18.61996928,
                    35.88593496, 21.40818572,  1.11468218, 28.03750882, 27.73909735,
                    42.9633994 , 24.59024637, 23.24046949, 29.66028395, 30.42051476,
                    27.99114866, 21.34037355, 23.83452316, 17.12704991,  7.29757855,
                    36.27942729, 16.45931138, 24.73896569, 14.27894589, 23.84376833,
                    14.18794045, 19.79474394,  9.3412575 , 28.23842586, 16.39918966,
                    15.27828487, 20.80217803, 32.37195781,  3.032125  , 32.6200381 ,
                    29.87820077, 29.10243275, 15.02954429, 11.21787625, 23.97961997,
                    6.39974472, 28.00532971, 17.07503536,  8.61976979,  7.14351747,
                    34.75904455, 22.71901996, 21.72408011, 11.52798163, 21.41141932,
                    26.73210156, 12.60888748, 32.07111394, 20.52162932,  5.18522769,
                    38.7842991 ,  5.56409731, 37.21894522, 18.00119553, 14.31458892,
                    34.20555097, 23.23168006, 28.07569083, 28.38577198, 15.52246333,
                    1.10373945, 30.78076885, 28.90373644,  3.15502495, 23.57682336,
                    39.39812065, 12.84718702, 21.54384418, 34.7889117 , 31.77763405,
                    33.90497409, 32.09356948, 28.52958658, 16.43597981, 14.95498858,
                    6.25347514,  4.35897421, 18.14703293, 35.25266588,  9.19708603,
                    22.68565808,  4.21652868, 28.72646166, 20.51871645, 21.02337996,
                    24.17061876, 30.64720797, 33.2495504 , 25.51926676, 12.18384863,
                    29.97608925, 32.89462021, 13.659593  , 31.55830268, 11.00018559,
                    4.46500694,  2.0015574 , 26.77266074,  5.73696376, 27.80638519,
                    34.65765751, 18.89483702, 10.16795819,  6.50098546,  4.50643778
                ]
            ]
        )
        return jenn.core.data.Dataset(X_test, Y_test)
    
    @pytest.fixture
    def one_layer_model(self) -> str: 
        """Return JMP equation for trained Rastrigin predictor using one layer."""
        return """
        6.63968579427224 + 2419.53609389846 * TanH(
            0.5 * (1.17629679110012 + -0.350827466968853 * :x1 + -0.441135986242386 * :x2)
        ) + 926.302874298947 * TanH(
            0.5 * (0.0532227576798577 + 0.112094306256208 * :x1 + -0.589518737153198 * :x2)
        ) + -4868.09413385432 * TanH(
            0.5 * (0.669012936934124 + -0.354310015265324 * :x1 + -0.442508530947179 * :x2)
        ) + 364.826302675917 * TanH(
            0.5 * (0.181903867225405 + -0.400769569147237 * :x1 + -1.82765795570436 * :x2)
        ) + 69.1044173973596 * TanH(
            0.5 * ((-1.33806951259538) + 5.05831585102242 * :x1 + 0.0768855196783658 * :x2)
        ) + 1003.55161311844 * TanH(
            0.5 * (0.333506711905318 + -1.21092868596007 * :x1 + -0.094803759612578 * :x2)
        ) + -105.644746963426 * TanH(
            0.5 * (0.0582830223989066 + -0.758691194673338 * :x1 + 0.193686573458068 * :x2)
        ) + 28.9924537808578 * TanH(
            0.5 * (1.68489056740589 + 0.203695375799704 * :x1 + 1.55265433664034 * :x2)
        ) + -16.1485832676648 * TanH(
            0.5 * (0.20830843078032 + 0.293819116867659 * :x1 + -3.34453047341792 * :x2)
        ) + -40.871646830766 * TanH(
            0.5 * (1.94906272051484 + -0.446838471653994 * :x1 + -7.96896877293616 * :x2)
        ) + 2.01890616631764 * TanH(
            0.5 * (0.501220953175385 + 1.35505831134419 * :x1 + -0.618548650974262 * :x2)
        ) + 150.412884466318 * TanH(
            0.5 * (2.21033919158451 + -0.696779972041321 * :x1 + -1.69376087699982 * :x2)
        )"""

    @pytest.fixture
    def two_layer_model(self) -> str: 
        """Return JMP equation for trained Rastrigin predictor using two layers."""
        return """
        48.399053498511 + -74.2279969766297 * TanH(
            0.5 * (0.048034990380859 + 0.198338493415764 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + 0.196133810685942 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.0344274348746591 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.257529036032957 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.558165515373775 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.572688069395901 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.0351002323778164 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.483953139259785 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.390968122725056 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 0.322937628307781 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.0089797800260763 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.0442402417301503 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + -50.3057125983854 * TanH(
            0.5 * (0.286479563657228 + 0.107694875983288 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -2.62427317741232 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + 0.0686177334851853 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + 0.0423444455427724 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.563846902612011 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.00782435601381364 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -0.0184285117689942 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.74317038492766 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.103028879325741 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + -0.0372527033933404 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.202280092258977 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.158724613920342 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 200.266641706943 * TanH(
            0.5 * ((-0.0334917463027501) + -0.113655408351106 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.525557266397345 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.0878523692660351 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.084274454973784 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + -0.490980110483864 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + 0.596685829235562 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.165288327244733 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.0962142564764319 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + 0.260670271561532 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 0.10632489869908 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.157798065044075 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.14888921747806 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + -64.1624438336851 * TanH(
            0.5 * ((-0.965652686863838) + -0.0278486035836462 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.582640267381403 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.0196042567678793 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.0222887294896085 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + -0.762012007228417 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.0688788089163307 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.0103257905562537 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -0.918109939894596 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + 0.0297385217232401 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + -0.0307791215932188 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + 0.0761690884428903 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 2.93550342038777 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 190.235812214887 * TanH(
            0.5 * (0.517064439880589 + 1.7432916254231 * TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.000817877919890585 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -2.28967102491936 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -2.19814316744485 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + -0.019498785680844 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + 1.22415322608487 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -3.21083152587935 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.0224412738829588 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -2.31591534470388 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + -1.38906498552773 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + 2.08227884297038 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.00243630606456266 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + -114.618529017513 * TanH(
            0.5 * ((-0.974105354414948) + -0.878583340088663 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + 0.0113676354253502 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + 0.981348723814647 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.471138305914713 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.157056533948353 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.871246113442498 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -0.448071527228188 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -0.143962068555082 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + 0.569402527575133 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 1.19538547946372 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.786399837015379 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 0.0232825539052393 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + -190.395996775225 * TanH(
            0.5 * ((-1.0115476258614) + 1.05328841466463 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.00426823285794962 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.728047027805918 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.0148739546821218 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + -0.18441961198543 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.135820656563356 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.00344976650106875 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.234526230763611 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.0238698917921372 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 0.25189863920284 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + 0.668186948828277 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.0105411496861169 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 109.882290482111 * TanH(
            0.5 * ((-0.230357574490107) + 0.339184941606968 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.466235328672862 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.116940225566732 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.0394724160321445 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.786952694258412 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.823129836185675 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -0.125195723869678 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -1.21110152508048 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -1.1739333849771 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 1.70124946254553 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.175735511944139 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 0.0583719018318257 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + -143.348218145646 * TanH(
            0.5 * (0.600699847718252 + -0.104732406373495 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + 0.623591978698812 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.250516684613128 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.0607768186641051 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.293941662919576 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + 0.255068755137695 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.0759288963009699 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -0.0883673471033438 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.353012981079563 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 0.429254632460884 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.361634672276076 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 0.284903693873905 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 798.751645092516 * TanH(
            0.5 * ((-0.301528551247732) + -0.077827528604464 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.0055008475913751 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.0582868909443658 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + 0.120580485053 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + -0.370103975131647 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.620847092187394 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -0.147339489965756 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + 0.229509843802053 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.174673927508439 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + -0.105886367424755 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.232280158586426 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + -0.0302225896656674 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 224.10917651606 * TanH(
            0.5 * ((-0.0215902024043757) + -0.580816886413869 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + -0.0300222971840975 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + -0.446001351493677 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + 0.441408823000353 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.272041974409342 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.577369817676803 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + 0.107732875593943 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -0.0375235055754679 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + 0.154050062794666 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 0.0457283597506673 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + -0.197824915641359 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 0.0799141087206023 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        ) + 769.767949688617 * TanH(
            0.5 * ((-0.239967673965549) + 0.189356896019129 *
            TanH(
                0.5 * ((-1.34858649326544) + 1.38963428423319 * :x1 + 0.0165397794467152 *
                :x2)
            ) + 0.0168235182763689 * TanH(
                0.5 * (0.191328650021936 + -0.00970643521865242 * :x1 + 5.55820010386644 *
                :x2)
            ) + 0.40862372263078 * TanH(
                0.5 * (1.53106858032016 + -1.48629683394341 * :x1 + 0.00381436134447432 *
                :x2)
            ) + -0.161987454527116 * TanH(
                0.5 * ((-0.387881055944232) + 2.5966434656516 * :x1 + 0.00957194045625 * :x2
                )
            ) + 0.132090716408849 * TanH(
                0.5 * (0.703443523882555 + 0.030004440080932 * :x1 + -2.2610127303685 * :x2)
            ) + -0.0554378095548646 * TanH(
                0.5 * ((-0.391614502434131) + 0.687943922071267 * :x1 + -0.0572627142631516
                * :x2)
            ) + -0.0464215439221465 * TanH(
                0.5 * (0.0919916297211653 + 3.6986228618374 * :x1 + -0.00113980007211537 *
                :x2)
            ) + -0.278038853347756 * TanH(
                0.5 * (0.576679189111106 + -0.0272173917612503 * :x1 + -1.84215733413184 *
                :x2)
            ) + -0.743639036125744 * TanH(
                0.5 * ((-0.0538122008938986) + -1.54717271719016 * :x1 +
                -0.00785714227702885 * :x2)
            ) + 2.30347371604498 * TanH(
                0.5 * (0.369082756167117 + -0.574583232393987 * :x1 + -0.0332778471710338 *
                :x2)
            ) + 0.875865753381016 * TanH(
                0.5 * ((-0.124403243855848) + 1.34674240316884 * :x1 + 0.000620889127853559
                * :x2)
            ) + 0.0309371922890329 * TanH(
                0.5 * ((-2.11250581376143) + -0.00128753653409358 * :x1 + 3.62380656380771
                * :x2)
            ))
        )"""
    
    def test_one_layer_model(self, data: jenn.core.data.Dataset, one_layer_model: str):
        """Test that loading a trained JMP model into JENN yields same accuracy as in JMP."""
        jmp_model = jenn.utils.from_jmp(equation=one_layer_model) 
        assert jenn.utils.metrics.r_square(
            y_pred=jmp_model.predict(data.X), 
            y_true=data.Y, 
        ) > 0.80  # JMP model is not great with just one layer

    def test_two_layer_model(self, data: jenn.core.data.Dataset, two_layer_model: str):
        """Test that loading a trained JMP model into JENN yields same accuracy as in JMP."""
        jmp_model = jenn.utils.from_jmp(equation=two_layer_model) 
        assert jenn.utils.metrics.r_square(
            y_pred=jmp_model.predict(data.X), 
            y_true=data.Y, 
        ) > 0.98  