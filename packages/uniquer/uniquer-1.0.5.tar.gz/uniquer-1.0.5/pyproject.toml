#
# MIT License
#
# Copyright (c) 2024 nbiotcloud
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

[tool.poetry]
name = "uniquer"
version = "1.0.5"
description = "Unique Iteration"
readme = "README.md"
license = "MIT"
authors = [
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

packages = [
    { include = "uniquer" },
]

[project.urls]
"Homepage" = "https://github.com/nbiotcloud/uniquer"
"Documentation" = "https://uniquer.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/nbiotcloud/uniquer/issues"

#[tool.poetry.scripts]


[tool.poetry.dependencies]
python = '^3.7.2'

[tool.poetry.group.test.dependencies]
black = '^23.3.0'
coverage = '^6.4.4'
isort = '^5.9'
mypy = "^1.3.0"
nbcpychecker = '^1.0.0'
pylint = '^2.15'
pytest = '^7.3'

[tool.poetry.group.doc.dependencies]
sphinx = '^5.1.1'
sphinx-rtd-theme = "^1.0.0"

[build-system]
requires = ["setuptools", "poetry_core>=1.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
  | \.tox
  | build
  | dist
  | setup\.py
)/
'''

[tool.isort]
profile = "black"
line_length = 120

[tool.coverage.report]
exclude_lines = [
    'return NotImplemented',
    'raise NotImplementedError()',
    'pragma: no cover'
]


[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
extension-pkg-whitelist = "pydantic"
disable = [
]

[tool.mypy]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py,py-min
isolated_build = True

[tox:.package]
basepython = python3

[testenv:py]
allowlist_externals = *
setenv =
    LANGUAGE=en_US

commands =
    poetry install --with=test --with=doc
    poetry run black .
    poetry run isort .
    poetry run coverage run --source=uniquer --branch -m pytest --doctest-glob=docs/*.rst --doctest-modules --ignore-glob=tests/testdata* --ignore=docs/conf.py --log-level=DEBUG -vv --junitxml=report.xml
    poetry run coverage report
    poetry run coverage html
    poetry run coverage xml
    poetry run pylint uniquer
    poetry run mypy uniquer
    poetry run make html -C docs
    poetry run nbcpychecker check
"""
