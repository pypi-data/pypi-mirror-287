# "*" is for entity/event projection mapping besides a single field
# if the submap is referred, there will be multiple reversed mappings, the first will be used


time: "@timestamp"


# endpoint: see https://schema.ocsf.io/1.1.0/objects/endpoint
device: &endpoint
    "*": host.*
    uid: host.id
    domain: host.domain
    name: host.name
    hostname: host.hostname
    ip: host.ip
    mac: host.mac
    os: os.name


# https://schema.ocsf.io/1.1.0/objects/user
user: &user
    "*": user.*
    domain: user.domain
    full_name: user.full_name
    name: user.name
    uid: user.id


# https://schema.ocsf.io/1.1.0/objects/file
file:
    "*": file.*
    endpoint: *endpoint
    accessed_time: file.accessed
    attributes: file.attributes
    created_time: file.created
    # This "hashes" notation comes from jmespath (filter projection)
    # Disable for now: it's much easier to use the ECS notation in this case
    #
    #hashes[?algorithm_id == 1]:
    #    value: hash.md5
    #hashes[?algorithm_id == 2]:
    #    value: hash.sha1
    #hashes[?algorithm_id == 3]:
    #    value: hash.sha256
    #hashes[?algorithm_id == 4]:
    #    value: hash.sha512
    #hashes[?algorithm_id == 5]:
    #    value: hash.ssdeep
    #hashes[?algorithm_id == 6]:
    #    value: hash.tlsh
    #hashes[*]:
    #    value:
    #      - hash.md5
    #      - hash.sha1
    #      - hash.sha256
    #      - hash.sha512
    #      - hash.ssdeep
    #      - hash.tlsh
    modified_time: file.ctime
    mime_type: file.mime_type
    mode: file.mode
    modified_time: file.mtime
    name: file.name
    owner: file.owner
    parent_folder: file.directory
    path: file.path
    size: file.size
    type: file.type
    xattributes:
        primary_group: file.gid
        link_name: file.target_path


# https://schema.ocsf.io/1.1.0/objects/group
group:
    "*": group.*
    domain: group.domain
    name: group.name
    uid: group.id


# https://schema.ocsf.io/1.1.0/objects/process
process: &process
    "*": process.*
    endpoint: *endpoint
    cmd_line: process.command_line
    name: process.name
    pid: process.pid
    uid: process.entity_id
    file:
        endpoint: *endpoint
        name:
          - native_field: process.executable
            native_op: LIKE
            native_value: winpath_endswith
            ocsf_value: basename
          - native_field: process.executable
            native_op: LIKE
            native_value: posixpath_endswith
            ocsf_value: basename
        path: process.executable
        parent_folder:
          - native_field: process.executable
            native_op: LIKE
            native_value: winpath_startswith
            ocsf_value: dirname
          - native_field: process.executable
            native_op: LIKE
            native_value: posixpath_startswith
            ocsf_value: dirname
        # This "hashes" notation comes from jmespath (filter projection)
        # It's much easier to use the ECS notation in this case
        #hashes[?algorithm_id == 1]:
        #    value: process.hash.md5
        #hashes[?algorithm_id == 2]:
        #    value: process.hash.sha1
        #hashes[?algorithm_id == 3]:
        #    value: process.hash.sha256
        #hashes[?algorithm_id == 4]:
        #    value: process.hash.sha512
        #hashes[?algorithm_id == 5]:
        #    value: process.hash.ssdeep
        #hashes[?algorithm_id == 6]:
        #    value: process.hash.tlsh
        #hashes[*]:
        #    value:
        #      - process.hash.md5
        #      - process.hash.sha1
        #      - process.hash.sha256
        #      - process.hash.sha512
        #      - process.hash.ssdeep
        #      - process.hash.tlsh
    parent_process:
        "*": process.parent.*
        endpoint: *endpoint
        cmd_line: process.parent.command_line
        name: process.parent.name
        pid: process.parent.pid
        uid: process.parent.entity_id
        file:
            endpoint: *endpoint
            name:
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: winpath_endswith
                ocsf_value: basename
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: posixpath_endswith
                ocsf_value: basename
            path: process.parent.executable
            parent_folder:
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: winpath_startswith
                ocsf_value: dirname
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: posixpath_startswith
                ocsf_value: dirname
        user:
            "*": process.parent.user.*
            endpoint: *endpoint
            domain: process.parent.user.domain
            full_name: process.parent.user.full_name
            name: process.parent.user.name
            uid: process.parent.user.id

    user:
        "*": process.user.*
        endpoint: *endpoint
        domain: process.user.domain
        full_name: process.user.full_name
        name: process.user.name
        uid: process.user.id


src_endpoint:
    "*": source.*
    domain: source.domain
    hostname: source.domain
    ip: source.ip
    mac: source.mac
    port: source.port
    # "*": client.*
    # domain: client.domain
    # hostname: client.domain
    # ip: client.ip
    # mac: client.mac
    # port: client.port


dst_endpoint:
    "*": destination.*
    domain: destination.domain
    hostname: destination.domain
    ip: destination.ip
    mac: destination.mac
    port: destination.port
    # "*": server.domain
    # domain: server.domain
    # hostname: server.domain
    # ip: server.ip
    # mac: server.mac
    # port: server.port


# endpoint: see https://schema.ocsf.io/1.2.0/objects/network_endpoint
#network_endpoint:
#    domain:
#        - client.domain
#        - source.domain
#        - server.domain
#        - destination.domain
#    hostname:
#        - client.domain
#        - source.domain
#        - server.domain
#        - destination.domain
#    ip:
#        - client.ip
#        - source.ip
#        - server.ip
#        - destination.ip
#    mac:
#        - client.mac
#        - source.mac
#        - server.mac
#        - destination.mac
#    port:
#        - client.port
#        - source.port
#        - server.port
#        - destination.port


# https://schema.ocsf.io/1.1.0/objects/network_traffic
traffic:
    bytes: network.bytes
    packets: network.packets
    bytes_in: destination.bytes
    bytes_out: source.bytes
    packets_in: destination.packets
    packets_out: source.packets
    # bytes_in: server.bytes
    # bytes_out: client.bytes
    # packets_in: server.packets
    # packets_out: client.packets


# https://schema.ocsf.io/1.1.0/objects/network_connection_info
connection_info:
    direction: network.direction  #TODO: need transformer?
    protocol_num: network.iana_number
    protocol_name: network.transport
    protocol_ver: network.type
    protocol_ver_id:
        native_field: network.type
        native_value: ip_version_to_network_layer
        ocsf_value: network_layer_to_ip_version


# https://schema.ocsf.io/1.1.0/objects/certificate
certificate:
    "*": x509.*
    expiration_time: x509.not_after
    created_time: x509.not_before
    serial_number: x509.serial_number
    fingerprints[*]:
        algorithm: x509.signature_algorithm
    version: x509.version_number
    issuer: x509.issuer.distinguished_name
    subject: x509.subject.distinguished_name


# https://schema.ocsf.io/1.2.0/objects/email
email:
    "*": email.*
    uid: email.message_id
    from: email.from.address
    to: email.to.address
    reply_to: email.reply_to.address
    cc: email.cc.address
    subject: email.subject


# https://schema.ocsf.io/1.2.0/objects/win/reg_key?extensions=win
reg_key:
    "*": registry.*
    endpoint: *endpoint
    path: registry.key


# https://schema.ocsf.io/1.2.0/objects/win/reg_value?extensions=win
reg_value:
    endpoint: *endpoint
    path: registry.value


# To simplify mapping, we do not cover parent process in actor.process
# - This semantic only appear in Process Activity [1007], please use `process.parent_process` to specify in this case
# - This works in Activity besides Process Activity [1007]
actor:
    process:
        endpoint: *endpoint
        cmd_line: process.parent.command_line
        name: process.parent.name
        pid: process.parent.pid
        uid: process.parent.entity_id
        file:
            endpoint: *endpoint
            name:
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: winpath_endswith
                ocsf_value: basename
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: posixpath_endswith
                ocsf_value: basename
            path: process.parent.executable
            parent_folder:
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: winpath_startswith
                ocsf_value: dirname
              - native_field: process.parent.executable
                native_op: LIKE
                native_value: posixpath_startswith
                ocsf_value: dirname
    user:
        endpoint: *endpoint
        domain: process.parent.user.domain
        full_name: process.parent.user.full_name
        name: process.parent.user.name
        uid: process.parent.user.id


# https://schema.ocsf.io/1.1.0/classes/base_event
# Base Event
type_uid:
    native_field: event.code
    native_value:
        100101: # File System Activity: Create
            - "11"   # Sysmon: FileCreate
        100701: # Process Activity: Launch
            - "1"    # Sysmon: Process creation
            - "4688" # Security: Process Create
        100702: # Process Activity: Terminate
            - "5"    # Sysmon: Process termindated
            - "4689"
        100703: # Process Activity: Open
            - "10"   # Sysmon: ProcessAccess
        100704: # Process Activity: Inject
            - "8"    # Sysmon: CreateRemoteThread
        300201: # auth: logon (success and failure)
            - "4624" # Security: An account was successfully logged on.
            - "4625" # Security: An account failed to log on.
        300400: # Entity Management: Unknown
            - "4662" # Security: An operation was performed on an object.
        400101: # Network Activity: Open
            - "3"    # Sysmon: Network connection
            - "5156" # Security: The Windows Filtering Platform has permitted a connection.
status_id:
  - native_field: event.code
    native_value:
        1: # Success
            - "4624" # Security: An account was successfully logged on.
        2: # Failure
            - "4625" # Security: An account failed to log on.
