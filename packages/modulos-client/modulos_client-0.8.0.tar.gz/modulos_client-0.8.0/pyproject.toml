[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "modulos_client"
description = "Package to interact with the Modulos Platform"
readme = "README.md"
requires-python = ">=3.10"
# license = {file = "LICENSE.txt"}
keywords = ["modulos_client"]
authors = [
  {name = "Modulos AG", email = "contact@modulos.ai" }
]
classifiers = [
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dynamic = ["version"]
dependencies = [
    
    "pandas >= 1.5.3, <= 2.2.2",
    "pydantic >= 2.4.2, <= 2.7.3",
    "requests >= 2.0.0, <= 2.32.3",
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install modulos_client[dev]
[project.optional-dependencies]
dev = [
    'coverage>= 7.2.7, <= 7.5.3',
    'pytest >= 7.3.1, <= 8.2.2',
    "pyYAML >= 6.0.1, <= 6.0.1",
    'tox >= 4.11.4, <= 4.15.1',
]

[project.urls]
"Homepage" = "https://github.com/Modulos/modulos_client"
"Bug Reports" = "https://github.com/Modulos/modulos_client/issues"
"Source" = "https://github.com/Modulos/modulos_client"

[project.scripts]
modulos = "modulos_client.cli:main"

[tool.setuptools.packages.find]
include = ["modulos_client", "modulos_client.*"]

[tool.setuptools.package-data]
"*" = ["*.html"]

[tool.setuptools_scm]
write_to = "modulos_client/_version.py"

[tool.coverage.report]
exclude_also = [
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
minversion = "3.0"
testpaths = ["tests"]
