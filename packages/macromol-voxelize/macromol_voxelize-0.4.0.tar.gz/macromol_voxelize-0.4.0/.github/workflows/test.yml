name: Test

on:
  push:
  pull_request:

jobs:

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: pip install ruff
      - run: ruff check --output-format=github .

  test:
    name: Run tests

    strategy:
      matrix:
        python-version: ['3.10', '3.x']
        operating-system:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.operating-system }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test] coverage[toml]
      - name: Run test suite
        run: |
          python -m coverage run -m pytest
      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.operating-system }}-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore

  test-llvm-cov:
    name: Run tests (with C++ coverage)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install test dependencies
        run: |
          sudo apt install llvm
          python -m pip install --upgrade pip

          export CC=$(which clang)
          export CXX=$(which clang++)
          export CFLAGS='-fprofile-instr-generate -fcoverage-mapping'
          
          python -m pip install -e '.[test]'
      - name: Run test suite
        run: |
          LLVM_PROFILE_FILE="mmvox.profraw" python -m pytest

          # https://stackoverflow.com/questions/50613601/getting-llvm-cov-to-talk-to-codecov-io
          llvm-profdata merge -sparse mmvox.profraw -o mmvox.profdata
          llvm-cov show \
            macromol_voxelize/_voxelize.*.so \
            -instr-profile=mmvox.profdata \
            macromol_voxelize/_voxelize.cc \
            | tee coverage-llvm.txt

      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-llvm
          path: coverage-llvm.txt
          if-no-files-found: ignore

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
      - test
      - test-llvm-cov

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          python -m pip install --upgrade pip
          python -m pip install coverage[toml]
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*

      - name: Combine coverage data
        run: |
          python -m coverage combine coverage-data-*
          python -m coverage xml --debug=pathmap
          python -m coverage report

      - name: Upload Codecov report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
