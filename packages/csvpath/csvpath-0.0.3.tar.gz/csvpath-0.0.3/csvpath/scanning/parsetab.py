# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "pathALL_LINES ANY FILENAME LEFT_BRACKET MINUS NAME NUMBER PLUS RIGHT_BRACKET ROOTroot : ROOT filenamefilename : FILENAMEpath : root LEFT_BRACKET expression RIGHT_BRACKETexpression : expression PLUS term\n        | expression MINUS term\n        | termterm : NUMBER\n        | NUMBER ALL_LINES\n        | ALL_LINES"

_lr_action_items = {
    "ROOT": (
        [
            0,
        ],
        [
            3,
        ],
    ),
    "$end": (
        [
            1,
            11,
        ],
        [
            0,
            -3,
        ],
    ),
    "LEFT_BRACKET": (
        [
            2,
            5,
            6,
        ],
        [
            4,
            -1,
            -2,
        ],
    ),
    "FILENAME": (
        [
            3,
        ],
        [
            6,
        ],
    ),
    "NUMBER": (
        [
            4,
            12,
            13,
        ],
        [
            9,
            9,
            9,
        ],
    ),
    "ALL_LINES": (
        [
            4,
            9,
            12,
            13,
        ],
        [
            10,
            14,
            10,
            10,
        ],
    ),
    "RIGHT_BRACKET": (
        [
            7,
            8,
            9,
            10,
            14,
            15,
            16,
        ],
        [
            11,
            -6,
            -7,
            -9,
            -8,
            -4,
            -5,
        ],
    ),
    "PLUS": (
        [
            7,
            8,
            9,
            10,
            14,
            15,
            16,
        ],
        [
            12,
            -6,
            -7,
            -9,
            -8,
            -4,
            -5,
        ],
    ),
    "MINUS": (
        [
            7,
            8,
            9,
            10,
            14,
            15,
            16,
        ],
        [
            13,
            -6,
            -7,
            -9,
            -8,
            -4,
            -5,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "path": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "root": (
        [
            0,
        ],
        [
            2,
        ],
    ),
    "filename": (
        [
            3,
        ],
        [
            5,
        ],
    ),
    "expression": (
        [
            4,
        ],
        [
            7,
        ],
    ),
    "term": (
        [
            4,
            12,
            13,
        ],
        [
            8,
            15,
            16,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> path", "S'", 1, None, None, None),
    ("root -> ROOT filename", "root", 2, "p_root", "scanner.py", 64),
    ("filename -> FILENAME", "filename", 1, "p_filename", "scanner.py", 67),
    (
        "path -> root LEFT_BRACKET expression RIGHT_BRACKET",
        "path",
        4,
        "p_path",
        "scanner.py",
        71,
    ),
    (
        "expression -> expression PLUS term",
        "expression",
        3,
        "p_expression",
        "scanner.py",
        77,
    ),
    (
        "expression -> expression MINUS term",
        "expression",
        3,
        "p_expression",
        "scanner.py",
        78,
    ),
    ("expression -> term", "expression", 1, "p_expression", "scanner.py", 79),
    ("term -> NUMBER", "term", 1, "p_term", "scanner.py", 90),
    ("term -> NUMBER ALL_LINES", "term", 2, "p_term", "scanner.py", 91),
    ("term -> ALL_LINES", "term", 1, "p_term", "scanner.py", 92),
]
