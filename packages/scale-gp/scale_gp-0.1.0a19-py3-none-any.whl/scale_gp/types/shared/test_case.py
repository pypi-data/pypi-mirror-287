# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Union, Optional
from datetime import datetime
from typing_extensions import Literal, Annotated

from ..._utils import PropertyInfo
from ..._models import BaseModel

__all__ = [
    "TestCase",
    "TestCaseData",
    "TestCaseDataArtifactSchemaGeneration",
    "TestCaseDataArtifactSchemaGenerationExpectedExtraInfo",
    "TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchema",
    "TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchemaChunk",
    "TestCaseDataArtifactSchemaGenerationExpectedExtraInfoStringExtraInfoSchema",
    "TestCaseDataSchemaGenerationBase",
    "TestCaseDataSchemaGenerationBaseExpectedExtraInfo",
    "TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchema",
    "TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchemaChunk",
    "TestCaseDataSchemaGenerationBaseExpectedExtraInfoStringExtraInfoSchema",
]


class TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchemaChunk(BaseModel):
    __test__ = False
    metadata: object

    text: str


class TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchema(BaseModel):
    __test__ = False
    chunks: List[TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchemaChunk]

    schema_type: Optional[Literal["CHUNKS"]] = None


class TestCaseDataArtifactSchemaGenerationExpectedExtraInfoStringExtraInfoSchema(BaseModel):
    __test__ = False
    info: str

    schema_type: Optional[Literal["STRING"]] = None


TestCaseDataArtifactSchemaGenerationExpectedExtraInfo = Annotated[
    Union[
        TestCaseDataArtifactSchemaGenerationExpectedExtraInfoChunkExtraInfoSchema,
        TestCaseDataArtifactSchemaGenerationExpectedExtraInfoStringExtraInfoSchema,
    ],
    PropertyInfo(discriminator="schema_type"),
]


class TestCaseDataArtifactSchemaGeneration(BaseModel):
    __test__ = False
    artifact_ids_filter: List[str]

    input: str

    expected_extra_info: Optional[TestCaseDataArtifactSchemaGenerationExpectedExtraInfo] = None

    expected_output: Optional[str] = None


class TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchemaChunk(BaseModel):
    __test__ = False
    metadata: object

    text: str


class TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchema(BaseModel):
    __test__ = False
    chunks: List[TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchemaChunk]

    schema_type: Optional[Literal["CHUNKS"]] = None


class TestCaseDataSchemaGenerationBaseExpectedExtraInfoStringExtraInfoSchema(BaseModel):
    __test__ = False
    info: str

    schema_type: Optional[Literal["STRING"]] = None


TestCaseDataSchemaGenerationBaseExpectedExtraInfo = Annotated[
    Union[
        TestCaseDataSchemaGenerationBaseExpectedExtraInfoChunkExtraInfoSchema,
        TestCaseDataSchemaGenerationBaseExpectedExtraInfoStringExtraInfoSchema,
    ],
    PropertyInfo(discriminator="schema_type"),
]


class TestCaseDataSchemaGenerationBase(BaseModel):
    __test__ = False
    input: str

    expected_extra_info: Optional[TestCaseDataSchemaGenerationBaseExpectedExtraInfo] = None

    expected_output: Optional[str] = None


TestCaseData = Union[TestCaseDataArtifactSchemaGeneration, TestCaseDataSchemaGenerationBase]


class TestCase(BaseModel):
    __test__ = False
    id: str
    """The unique identifier of the entity."""

    account_id: str
    """The ID of the account that owns the given entity."""

    autogenerated: bool
    """Boolean to track whether or not the test case is autogenerated"""

    created_at: datetime
    """The date and time when the entity was created in ISO format."""

    created_by_user_id: str
    """The user who originally created the entity."""

    evaluation_dataset_id: str
    """The ID of the associated evaluation dataset."""

    schema_type: Literal["GENERATION"]
    """An enumeration."""

    test_case_data: TestCaseData
    """The data for the test case in a format matching the provided schema_type"""

    archived_at: Optional[datetime] = None
    """The date and time when the entity was archived in ISO format."""

    chat_history: Optional[object] = None
    """Used for tracking previous chat interactions for multi-chat test cases"""

    test_case_metadata: Optional[object] = None
    """Metadata for the test case"""
