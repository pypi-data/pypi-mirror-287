[tool.poetry]
name = "poetry-incr-version"
version = "0.1.7"
description = "Tool to help manage the version of a Poetry project in CI pipelines"
authors = ["Florian Daude <floriandaude@hotmail.fr>"]
license = "MIT"
readme = "README.md"


[[tool.poetry.packages]]
include = "poetry_incr_version"


[tool.poetry.dependencies]
python = ">=3.11"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.5"
pyright = "^1.1.373"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.scripts]
poetry-incr-version = "poetry_incr_version.__main__:main"


[tool.pyright]
include = ["poetry_incr_version", "tests"]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"
pythonVersion = "3.11"


[tool.ruff]
target-version = "py311"
exclude = ["tests/data", ".venv"]


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Conflicting rules

    "D203", # one-blank-line-before-clas
    # "D211", # no-blank-line-before-class

    "D212", # multi-line-summary-first-line
    # "D213", # multi-line-summary-second-line

    # "S602", # subprocess-popen-with-shell-equals-true
    "S603", # subprocess-without-shell-equals-true 

    # Conflicts with format https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",   # tab-indentation
    "E111",   # indentation-with-invalid-multiple
    "E114",   # indentation-with-invalid-multiple-comment
    "E117",   # over-indented
    "D206",   # indent-with-spaces
    "D300",   # triple-single-quotes
    "Q000",   # bad-quotes-inline-string
    "Q001",   # bad-quotes-multiline-string
    "Q002",   # bad-quotes-docstring
    "Q003",   # avoidable-escaped-quote
    "COM812", # missing-trailing-comma
    "COM819", # prohibited-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "ISC002", # multi-line-implicit-string-concatenation
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004"] # Allow assert and magic values in tests


[tool.coverage.run]
branch = true
data_file = ".coverage/measurements.cov"


[tool.coverage.report]
precision = 1
exclude_also = ["\\(Protocol\\)"]


[tool.coverage.html]
directory = ".coverage/html"
