# // Pygstudio template file created by pygstudio script (Version 1.1)
# ? You are free to edit this script

# ! Required, you can edit the directory
script_directory = "scripts"
# components_directory = "components"

import os
def run():
    import threading
    
    current_directory = os.path.dirname(os.path.abspath(__file__))
    if not os.path.exists(os.path.abspath(current_directory)): return
    
    current_script_directory = current_directory + "\\" + script_directory
        
    threaded_filenames = os.listdir(current_script_directory)
    threaded_abspath =  script_directory.replace('/', '.').replace("\\", ".")
    for filename in threaded_filenames:
        if filename.startswith("_"): continue
        threading.Thread(daemon=True, target=exec, args=(
            f"import {threaded_abspath}.{filename.strip('.py')}",)).start()
        
# ? Optional, not needed most of the time
# ? Depends on how you import your components

# def update_components():
#     component_folder = os.path.abspath(os.path.dirname(__file__) + "\\" + components_directory)
#     component_files = [file for file in os.listdir(component_folder) 
#                        if not (file.startswith("_") or file.startswith("."))]
#     contents = '"""A component module containing all components inside this directory"""\n' \
#                "# ! Autogenerated by local script_manager.py\n" \
#                "# This script imports all components that belong to this directory\n" \
#                "# and adds them into this script for easy access\n"
#     if len(component_files) > 0:
#         contents += "from . import (\n"
#         for file in component_files: contents += file.strip(".py") + ",\n"
#         contents += ")"
#     with open(f"{component_folder}/__init__.py", "wt") as this_file:
#         this_file.write(contents)

# if __name__ == '__main__': 
#     update_components()