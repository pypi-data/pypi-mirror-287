"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
order.proto

Functions and messages supporting an e-commerce
workflow for things like invoices, shipping labels,
etc.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kerfed.protos.common.v1.address_pb2
import kerfed.protos.common.v1.fileblob_pb2
import kerfed.protos.common.v1.money_pb2
import kerfed.protos.common.v1.price_pb2
import kerfed.protos.common.v1.scene_pb2
import kerfed.protos.common.v1.shipping_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Order(google.protobuf.message.Message):
    """a placed order"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_ID_FIELD_NUMBER: builtins.int
    SHOP_ID_FIELD_NUMBER: builtins.int
    SHIPPING_FIELD_NUMBER: builtins.int
    BILLING_FIELD_NUMBER: builtins.int
    LINES_FIELD_NUMBER: builtins.int
    PRICES_FIELD_NUMBER: builtins.int
    MODELS_FIELD_NUMBER: builtins.int
    ORIGINALS_FIELD_NUMBER: builtins.int
    PARCELS_FIELD_NUMBER: builtins.int
    order_id: builtins.str
    """the uuid with hyphens"""
    shop_id: builtins.str
    """the id of the shop the *order was placed from*"""
    @property
    def shipping(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """where is order shipped to"""
    @property
    def billing(self) -> kerfed.protos.common.v1.address_pb2.PostalAddress:
        """where is order billed to"""
    @property
    def lines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.price_pb2.LineSpec]:
        """fully configured parts in the order"""
    @property
    def prices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.price_pb2.LinePrice]:
        """the corresponding prices for the parts"""
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.scene_pb2.Scene]:
        """the models for the parts"""
    @property
    def originals(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fileblob_pb2.FileBlob]:
        """the original CAD files for the order"""
    @property
    def parcels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.shipping_pb2.ShippingParcel]:
        """the parcels this order is shipping with"""
    def __init__(
        self,
        *,
        order_id: builtins.str = ...,
        shop_id: builtins.str = ...,
        shipping: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        billing: kerfed.protos.common.v1.address_pb2.PostalAddress | None = ...,
        lines: collections.abc.Iterable[kerfed.protos.common.v1.price_pb2.LineSpec] | None = ...,
        prices: collections.abc.Iterable[kerfed.protos.common.v1.price_pb2.LinePrice] | None = ...,
        models: collections.abc.Iterable[kerfed.protos.common.v1.scene_pb2.Scene] | None = ...,
        originals: collections.abc.Iterable[kerfed.protos.common.v1.fileblob_pb2.FileBlob] | None = ...,
        parcels: collections.abc.Iterable[kerfed.protos.common.v1.shipping_pb2.ShippingParcel] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["billing", b"billing", "shipping", b"shipping"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["billing", b"billing", "lines", b"lines", "models", b"models", "order_id", b"order_id", "originals", b"originals", "parcels", b"parcels", "prices", b"prices", "shipping", b"shipping", "shop_id", b"shop_id"]) -> None: ...

global___Order = Order

@typing_extensions.final
class Job(google.protobuf.message.Message):
    """a Job is a released-to-manufacture package"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOP_ID_FIELD_NUMBER: builtins.int
    ORDER_ID_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    PARCELS_FIELD_NUMBER: builtins.int
    shop_id: builtins.str
    """which shop is making this"""
    order_id: builtins.str
    """which order was this job created from"""
    job_id: builtins.str
    """unique identifier for this job"""
    @property
    def part_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """the parts being manufactured by this job"""
    @property
    def amount(self) -> kerfed.protos.common.v1.money_pb2.Money:
        """the total amount of money that
        will be disbursed to the shop on completion
        shipping which will be either paid by us or
        invoiced separately.
        """
    @property
    def summary(self) -> kerfed.protos.common.v1.fileblob_pb2.FileBlob:
        """A PDF document with quantities, drawings
        shipping labels, etc.
        """
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.fileblob_pb2.FileBlob]:
        """any additional reference files, including
        flattened DXF drawings, original models, etc.
        """
    @property
    def parcels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[kerfed.protos.common.v1.shipping_pb2.ShippingParcel]:
        """the parcels this order is shipping with"""
    def __init__(
        self,
        *,
        shop_id: builtins.str = ...,
        order_id: builtins.str = ...,
        job_id: builtins.str = ...,
        part_id: collections.abc.Iterable[builtins.str] | None = ...,
        amount: kerfed.protos.common.v1.money_pb2.Money | None = ...,
        summary: kerfed.protos.common.v1.fileblob_pb2.FileBlob | None = ...,
        files: collections.abc.Iterable[kerfed.protos.common.v1.fileblob_pb2.FileBlob] | None = ...,
        parcels: collections.abc.Iterable[kerfed.protos.common.v1.shipping_pb2.ShippingParcel] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amount", b"amount", "summary", b"summary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "files", b"files", "job_id", b"job_id", "order_id", b"order_id", "parcels", b"parcels", "part_id", b"part_id", "shop_id", b"shop_id", "summary", b"summary"]) -> None: ...

global___Job = Job
