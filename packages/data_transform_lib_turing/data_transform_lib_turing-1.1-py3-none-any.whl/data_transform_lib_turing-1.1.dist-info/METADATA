Metadata-Version: 2.1
Name: data_transform_lib_turing
Version: 1.1
Summary: 3 functions for data transformation
Author: Lukas Miliauskas
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: numpy (>=2.0.1,<3.0.0)
Description-Content-Type: text/markdown

# Data Transformation Library

## Description
The Data Transformation Library is a Python package designed for performing various matrix operations. This package includes functions for matrix transposition, sliding window generation on 1D arrays, and applying 2D convolution on matrices. 

## Installation

To install the Data Transformation Library, you will need Python 3.8 or later. The package can be installed via pip directly from PyPI:

```bash
pip install data_transformation_library
```

## Usage

Here is how you can use the functions in the Data Transformation Library:

### Transpose a 2D matrix

```python
from data_transformation_library import transpose2d

matrix = [
    [1, 2],
    [3, 4]
]
transposed = transpose2d(matrix)
print(transposed)
```

### Create a sliding window from a 1D array

```python
from data_transformation_library import window1d
import numpy as np

input_array = np.array([1, 2, 3, 4, 5])
windows = window1d(input_array, size=2, shift=1, stride=1)
print(windows)
```

### Apply a 2D convolution to a matrix

```python
from data_transformation_library import convolution2d
import numpy as np

input_matrix = np.array([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
])
kernel = np.array([
    [1, 0],
    [0, -1]
])

convol_result = convolution2d(input_matrix, kernel)
print(convol_result)
```

