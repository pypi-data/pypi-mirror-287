Metadata-Version: 2.1
Name: tj_tpauth
Version: 1.0.1
Summary: The Python library helps authenticate accounts from TP Servers.
Home-page: https://github.com/duynguyen02/TJ-TPAuth
Author: duynguyen02
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/markdown
Requires-Dist: aiohttp==3.9.5
Requires-Dist: aiosignal==1.3.1
Requires-Dist: async-timeout==4.0.3
Requires-Dist: attrs==23.2.0
Requires-Dist: certifi==2024.7.4
Requires-Dist: charset-normalizer==3.3.2
Requires-Dist: frozenlist==1.4.1
Requires-Dist: idna==3.7
Requires-Dist: multidict==6.0.5
Requires-Dist: requests==2.32.3
Requires-Dist: urllib3==2.2.2
Requires-Dist: yarl==1.9.4

# TJ-TPAuth 1.0.0

### Sync

```python
from tj_tpauth import TJTPAuth

tpauth = TJTPAuth(
    host='http://localhost:3000'
)

login_status = tpauth.login(
    username='username',
    password='password'
)

if not login_status.status:
    exit(0)

auth_status = tpauth.from_token(login_status.data.token)

if not login_status.status:
    exit(0)

print(auth_status.data)
```

### Async

```python
import asyncio

from tj_tpauth import TJTPAuth

tpauth = TJTPAuth(
    host='http://localhost:3000'
)


async def main():
    login_status = await tpauth.aio_login(
        username='username',
        password='password'
    )

    if not login_status.status:
        exit(0)

    auth_status = await tpauth.aio_from_token(login_status.data.token)

    if not login_status.status:
        exit(0)

    print(auth_status.data)


asyncio.run(main())
```
