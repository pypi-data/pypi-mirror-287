[tox]
minversion = 3.18
envlist = codestyle,docstyle,errors,types,test,coverage
isolated_build = True

[testenv]
extras = test
commands =
    test-py3{5,6,7,8}: pytest {posargs:tests}

[testenv:format]
description = Format code.
skip_install = true
envdir = {toxworkdir}/lint
deps =
    black
    isort >= 5.0
commands =
    isort .
    black src/ tests/

[testenv:codestyle]
description = Check code and tests for PEP 8 compliance and code complexity.
skip_install = true
envdir = {toxworkdir}/lint
deps =
    flake8
    isort >= 5.0
commands =
    flake8 --select E,W,C --show-source src/ tests/
    isort --check --diff .

[testenv:docstyle]
description = Check docstrings for PEP 257 compliance (Google style).
skip_install = true
envdir = {toxworkdir}/lint
deps =
    pydocstyle
commands = pydocstyle src/

[testenv:flake]
description = Find errors with static code analysis.
envdir = {toxworkdir}/lint
deps =
    flake8
    flake8-gl-codeclimate
commands =
    flake8 --format gl-codeclimate --output-file flake.json --select F src/pyvisa_proxy tests/

[testenv:pylint]
description = Find errors with static code analysis.
envdir = {toxworkdir}/lint
deps =
    pylint
    pylint-gitlab
commands =
    pylint --load-plugins=pylint_gitlab --output-format=gitlab-codeclimate:pylint.json,colorized --errors-only src/pyvisa_proxy

[testenv:errors]
description = Find errors with static code analysis.
envdir = {toxworkdir}/lint
deps =
    {[testenv:flake]deps}
    {[testenv:pylint]deps}
commands =
    {[testenv:flake]commands}
    {[testenv:pylint]commands}

[testenv:types]
description = Run static type checker.
skip_install = true
envdir = {toxworkdir}/lint
deps =
    mypy
    types-six
commands =
    mypy --check-untyped-defs --no-implicit-optional src/

[testenv:test]
description = Run tests with pytest.
passenv = CI
extras = test
commands =
    pytest --cov --cov-report= {posargs:tests}

[testenv:coverage]
description = Measure and report coverage.
deps =
    coverage[toml]
commands =
    coverage html
    coverage xml
    coverage report --fail-under 50

[testenv:clean]
description = Remove all generated and temporary files.
skip_install = true
allowlist_externals =
    git
deps =
    coverage[toml]
commands =
    coverage erase
    git clean -xfd

[flake8]
ignore = W503,E203
max-line-length = 79

[pydocstyle]
convention = pep257
