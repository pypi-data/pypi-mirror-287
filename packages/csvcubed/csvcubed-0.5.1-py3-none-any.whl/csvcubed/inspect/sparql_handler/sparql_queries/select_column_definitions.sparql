PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX csvw: <http://www.w3.org/ns/csvw#>

SELECT
        ?csvUrl
        ?aboutUrl
        ?dataType
        ?name
        ?propertyUrl
        (COALESCE(?requiredO, false) as ?required)
        (COALESCE(?suppressOutputO, false) as ?suppressOutput)
        ?title
        ?valueUrl
        (COALESCE(?virtualO, false) as ?virtual)
        ?columnOrder
WHERE {

    {
        # Code List CSV-W tableSchemas are referenced from two locations:
        #  * the cube they're part of
        #  * the `.csv-metadata.json` file which defines the Code List independently.
        # We load both of these into the rdf_graph so we end up with two triples saying:
        #   []  csvw:tableSchema ?tableSchema.
        # This introduces duplicates to the query which we can remove with this DISTINCT sub-query.
        SELECT DISTINCT ?csvUrl ?tableSchema
        WHERE {
            [] csvw:tableSchema ?tableSchema;
               csvw:url ?csvUrl.
        }
    }

    {
        # Nasty approach to preserving the column order
        SELECT ?tableSchema ?column (COUNT(?midListItem) as ?columnOrder)
        WHERE {
            ?tableSchema csvw:column/rdf:rest* ?midListItem.
            # ?midListItems matches on all of the list items between the start of the list and the list item defining each column.
            # We can use the number of ?midListItems between the beginning and the column to determine the column's order in the table.
            ?midListItem rdf:rest* ?columnListItem.
            ?columnListItem rdf:first ?column.
        }
        GROUP BY ?tableSchema ?column
    }

    OPTIONAL { ?column csvw:aboutUrl ?aboutUrl. }
    OPTIONAL { ?column csvw:datatype ?dataType. }
    OPTIONAL { ?column csvw:name ?name. }
    OPTIONAL { ?column csvw:propertyUrl ?propertyUrl. }
    OPTIONAL { ?column csvw:required ?requiredO. }
    OPTIONAL { ?column csvw:suppressOutput ?suppressOutputO. }
    OPTIONAL { ?column csvw:title ?title. }
    OPTIONAL { ?column csvw:valueUrl ?valueUrl. }
    OPTIONAL { ?column csvw:virtual ?virtualO. }
}
ORDER BY ASC(?csvUrl) ASC(?columnOrder)
