"use strict";(self.webpackChunkjupyter_server_nbmodel=self.webpackChunkjupyter_server_nbmodel||[]).push([[73],{73:(e,t,o)=>{o.r(t),o.d(t,{default:()=>h});var n=o(607),s=o(74),r=o(31),a=o(87),i=o(465),l=o(605),d=o(262),c=o(256);class u{constructor(e){var t;this._serverSettings=null!==(t=e.serverSettings)&&void 0!==t?t:i.ServerConnection.makeSettings()}async runCell({cell:e,notebook:t,notebookConfig:o,onCellExecuted:r,onCellExecutionScheduled:a,sessionContext:i,sessionDialogs:d,translator:c}){var u,h,m;const g=(c=null!=c?c:l.nullTranslator).load("jupyterlab");switch(e.model.type){case"markdown":e.rendered=!0,e.inputHidden=!1,r({cell:e,success:!0});break;case"code":if(i){if(i.isTerminating){await(0,n.showDialog)({title:g.__("Kernel Terminating"),body:g.__("The kernel for %1 appears to be terminating. You can not run any cell for now.",null===(u=i.session)||void 0===u?void 0:u.path),buttons:[n.Dialog.okButton()]});break}if(i.pendingInput)return await(0,n.showDialog)({title:g.__("Cell not executed due to pending input"),body:g.__("The cell has not been executed to avoid kernel deadlock as there is another pending input! Submit your pending input and try again."),buttons:[n.Dialog.okButton()]}),!1;if(i.hasNoKernel&&await i.startKernel()&&d&&await d.selectKernel(i),i.hasNoKernel)return e.model.sharedModel.transact((()=>{e.model.clearExecution()})),!0;const o=null===(m=null===(h=null==i?void 0:i.session)||void 0===h?void 0:h.kernel)||void 0===m?void 0:m.id,l=s.URLExt.join(this._serverSettings.baseUrl,`api/kernels/${o}/execute`),v=e.model.sharedModel.getSource(),b=e.model.sharedModel.getId(),w=t.sharedModel.getState("document_id"),k={method:"POST",body:JSON.stringify({code:v,metadata:{cell_id:b,document_id:w}})};a({cell:e});let y=!1;try{const t=await p(e,l,k,this._serverSettings,c);y="ok"===(await t.json()).status}catch(t){if(r({cell:e,success:!1}),e.isDisposed)return!1;throw t}return r({cell:e,success:y}),!0}e.model.sharedModel.transact((()=>{e.model.clearExecution()}),!1)}return Promise.resolve(!0)}}async function p(e,t,o,n,r,l=100){const u=new d.PromiseDelegate;return i.ServerConnection.makeRequest(t,o,n).then((async d=>{if(d.ok)if(202===d.status){let o=d.headers.get("Location")||t;o.startsWith(n.baseUrl)||(o=s.URLExt.join(n.baseUrl,o)),setTimeout((async(e,t,o,n,s,r)=>{try{const a=await p(e,t,o,n,s,r);u.resolve(a)}catch(e){u.reject(e)}}),l,e,o,{method:"GET"},n,r,Math.min(1e3,2*l))}else u.resolve(d);else if(300===d.status){let l=d.headers.get("Location")||"";l.startsWith(n.baseUrl)||(l=s.URLExt.join(n.baseUrl,l));const{parent_header:h,input_request:m}=await d.json(),g=new c.Panel;g.addClass("jp-OutputArea-child"),g.addClass("jp-OutputArea-stdin-item");const v=new a.OutputPrompt;v.addClass("jp-OutputArea-prompt"),g.addWidget(v);const b=new a.Stdin({future:Object.freeze({sendInputReply:(e,t)=>{i.ServerConnection.makeRequest(l,{method:"POST",body:JSON.stringify({input:e.value})},n).catch((t=>{console.error(`Failed to set input to ${JSON.stringify(e)}.`,t)}))}}),parent_header:h,password:m.password,prompt:m.prompt,translator:r});b.addClass("jp-OutputArea-output"),g.addWidget(b);const w=b.node.getElementsByTagName("input")[0];b.value.then((s=>{g.addClass("jp-OutputArea-stdin-hiding"),e.outputArea.model.add({output_type:"stream",name:"stdin",text:s+"\n"}),w.focus(),window.setTimeout((async()=>{const s=document.activeElement;g.dispose(),s&&s instanceof HTMLElement&&s.focus();try{const s=await p(e,t,o,n,r);u.resolve(s)}catch(e){u.reject(e)}}),500)})),e.outputArea.layout.addWidget(g)}else u.reject(await i.ServerConnection.ResponseError.create(d))})).catch((e=>{u.reject(new i.ServerConnection.NetworkError(e))})),u.promise}const h={id:"jupyter-server-nbmodel:notebook-cell-executor",description:"Add notebook cell executor that uses REST API instead of kernel protocol over WebSocket.",autoStart:!0,provides:r.INotebookCellExecutor,activate:e=>new u({serverSettings:e.serviceManager.serverSettings})}}}]);