Metadata-Version: 2.3
Name: pytorchfire
Version: 1.0.0
Summary: PyTorchFire: A GPU-Accelerated Wildfire Simulator with Differentiable Cellular Automata
Project-URL: Documentation, https://pytorchfire.readthedocs.io/
Project-URL: Issues, https://github.com/xiazeyu/PyTorchFire/issues
Project-URL: Source, https://github.com/xiazeyu/PyTorchFire
Author-email: Zeyu Xia <zeyu.xia@email.virginia.edu>
License: MIT License
        
        Copyright (c) 2024 Zeyu Xia
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: Environment :: GPU
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Requires-Python: >=3.8
Requires-Dist: einops~=0.8.0
Requires-Dist: numpy
Requires-Dist: torch~=2.3.1
Provides-Extra: examples
Requires-Dist: einops~=0.8.0; extra == 'examples'
Requires-Dist: h5py; extra == 'examples'
Requires-Dist: mpi4py; extra == 'examples'
Requires-Dist: numpy; extra == 'examples'
Requires-Dist: tensorboard; extra == 'examples'
Requires-Dist: torch~=2.3.1; extra == 'examples'
Requires-Dist: tqdm; extra == 'examples'
Description-Content-Type: text/markdown

# PyTorchFire: A GPU-Accelerated Wildfire Simulator with Differentiable Cellular Automata

[![Hatch project](https://img.shields.io/badge/%F0%9F%A5%9A-Hatch-4051b5.svg)](https://github.com/pypa/hatch)
[![Read the Docs](https://readthedocs.org/projects/pytorchfire/badge/)](https://pytorchfire.readthedocs.io/)

### Installation

Install with minimal dependencies:

```shell
pip install pytorchfire
```

Install with dependencies for examples:

```shell
pip install 'pytorchfire[examples]'
```

### Quick Start

```shell
pip install 'wildtorch[full]'
```

Perform wildfire prediction:

```python
from pytorchfire import WildfireModel

model = WildfireModel() # Create a model with default parameters and environment data
model = model.cuda() # Move the model to GPU
# model.reset(seed=seed) # Reset the model with a seed
for _ in range(100): # Run the model for 100 steps
    model.compute() # Compute the next state
```

Perform parameter calibration:

```python
import torch
from pytorchfire import WildfireModel, BaseTrainer

model = WildfireModel()

trainer = BaseTrainer(model)

trainer.train()
trainer.evaluate()
```

### API Documents

See at Our [Read the Docs](https://pytorchfire.readthedocs.io/).

