"""
    Cohesity REST API

    Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cohesity_sdk
from cohesity_sdk.cluster.model.security_config import SecurityConfig
from cohesity_sdk.cluster.model.security_config_account_lockout import SecurityConfigAccountLockout
from cohesity_sdk.cluster.model.security_config_certificate_based_auth import SecurityConfigCertificateBasedAuth
from cohesity_sdk.cluster.model.security_config_data_classification import SecurityConfigDataClassification
from cohesity_sdk.cluster.model.security_config_password_lifetime import SecurityConfigPasswordLifetime
from cohesity_sdk.cluster.model.security_config_password_reuse import SecurityConfigPasswordReuse
from cohesity_sdk.cluster.model.security_config_password_strength import SecurityConfigPasswordStrength
from cohesity_sdk.cluster.model.security_config_session_configuration import SecurityConfigSessionConfiguration
from cohesity_sdk.cluster.model.security_config_ssh_configuration import SecurityConfigSshConfiguration
globals()['SecurityConfig'] = SecurityConfig
globals()['SecurityConfigAccountLockout'] = SecurityConfigAccountLockout
globals()['SecurityConfigCertificateBasedAuth'] = SecurityConfigCertificateBasedAuth
globals()['SecurityConfigDataClassification'] = SecurityConfigDataClassification
globals()['SecurityConfigPasswordLifetime'] = SecurityConfigPasswordLifetime
globals()['SecurityConfigPasswordReuse'] = SecurityConfigPasswordReuse
globals()['SecurityConfigPasswordStrength'] = SecurityConfigPasswordStrength
globals()['SecurityConfigSessionConfiguration'] = SecurityConfigSessionConfiguration
globals()['SecurityConfigSshConfiguration'] = SecurityConfigSshConfiguration
from cohesity_sdk.model.security_config_response import SecurityConfigResponse


class TestSecurityConfigResponse(unittest.TestCase):
    """SecurityConfigResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testSecurityConfigResponse(self):
        """Test SecurityConfigResponse"""
        # FIXME: construct object with mandatory attributes with example values
        # model = SecurityConfigResponse()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
