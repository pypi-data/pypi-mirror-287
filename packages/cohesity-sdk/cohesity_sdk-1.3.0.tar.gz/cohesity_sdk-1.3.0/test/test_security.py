"""
    Cohesity REST API

    Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import cohesity_sdk
from cohesity_sdk.api.security import SecurityApi  # noqa: E501


class TestSecurityApi(unittest.TestCase):
    """SecurityApi unit test stubs"""

    def setUp(self):
        self.api = SecurityApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_clientcsr(self):
        """Test case for create_clientcsr

        Create Certificate Signing Requests on the cluster.  # noqa: E501
        """
        pass

    def test_create_csr(self):
        """Test case for create_csr

        Create a Certificate Signing Request on the cluster.  # noqa: E501
        """
        pass

    def test_delete_csr(self):
        """Test case for delete_csr

        Delete a Certificate Signing Request on the cluster.  # noqa: E501
        """
        pass

    def test_get_ciphers(self):
        """Test case for get_ciphers

        Gets the list of ciphers enabled on the cluster.  # noqa: E501
        """
        pass

    def test_get_csr_by_id(self):
        """Test case for get_csr_by_id

        List the specified Certificate Signing Request.  # noqa: E501
        """
        pass

    def test_get_csr_list(self):
        """Test case for get_csr_list

        List Certificate Signing Requests on the cluster.  # noqa: E501
        """
        pass

    def test_get_object_store_ciphers(self):
        """Test case for get_object_store_ciphers

        Gets the list of object store ciphers enabled on the cluster.  # noqa: E501
        """
        pass

    def test_get_security_config(self):
        """Test case for get_security_config

        Get cluster security settings.  # noqa: E501
        """
        pass

    def test_import_certificate_by_clientcsr(self):
        """Test case for import_certificate_by_clientcsr

        Import the signed certificates on the cluster after the Certificate Signing Requests are created.  # noqa: E501
        """
        pass

    def test_list_trusted_ca_by_id(self):
        """Test case for list_trusted_ca_by_id

        List the specified Certificate.  # noqa: E501
        """
        pass

    def test_list_trusted_cas(self):
        """Test case for list_trusted_cas

        List all Certificates with cluster trust store.  # noqa: E501
        """
        pass

    def test_modify_ciphers(self):
        """Test case for modify_ciphers

        Enable/Disable a list of ciphers on the cluster. Iris must be restarted for the change to take effect.  # noqa: E501
        """
        pass

    def test_modify_object_store_ciphers(self):
        """Test case for modify_object_store_ciphers

        Enable/Disable a list of object store ciphers on the cluster. Bridge must be restarted for the change to take effect.  # noqa: E501
        """
        pass

    def test_register_trusted_cas(self):
        """Test case for register_trusted_cas

        Register CA Certificate to the cluster trust store.  # noqa: E501
        """
        pass

    def test_unregister_trusted_ca(self):
        """Test case for unregister_trusted_ca

        Unregister CA Certificate from the cluster trust store.  # noqa: E501
        """
        pass

    def test_update_certificate_by_csr(self):
        """Test case for update_certificate_by_csr

        Update the signed certificate on the cluster after a Certificate Signing Request is created.  # noqa: E501
        """
        pass

    def test_update_security_config(self):
        """Test case for update_security_config

        Update cluster security settings.  # noqa: E501
        """
        pass

    def test_validate_trusted_ca_by_id(self):
        """Test case for validate_trusted_ca_by_id

        Validate CA Certificate.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
