# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: IpService.proto, LakGatewayService.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import AsyncGenerator, Optional

import betterproto
import grpclib


@dataclass
class IpRequest(betterproto.Message):
    ip: str = betterproto.string_field(1)


@dataclass
class IpDetails(betterproto.Message):
    ip: str = betterproto.string_field(1)
    region: str = betterproto.string_field(2)
    country: str = betterproto.string_field(3)
    location: str = betterproto.string_field(4)
    postal: str = betterproto.string_field(5)
    country_name: str = betterproto.string_field(6)
    organization: str = betterproto.string_field(7)
    timezone: str = betterproto.string_field(8)


@dataclass
class LakGatewayInputMetadata(betterproto.Message):
    world_id: int = betterproto.int32_field(1)
    email: str = betterproto.string_field(2)
    password: str = betterproto.string_field(3)
    ip_id: str = betterproto.string_field(4)


@dataclass
class LakGatewayInputEmpty(betterproto.Message):
    metadata: "LakGatewayInputMetadata" = betterproto.message_field(1)


@dataclass
class LakGatewayStatus(betterproto.Message):
    is_finished: bool = betterproto.bool_field(1)
    status: str = betterproto.string_field(2)
    progress: int = betterproto.int32_field(3)
    data: bytes = betterproto.bytes_field(4)


class IpServiceStub(betterproto.ServiceStub):
    async def get_ip_details(self, *, ip: str = "") -> IpDetails:
        request = IpRequest()
        request.ip = ip

        return await self._unary_unary(
            "/grpc.api.v1.IpService/GetIpDetails",
            request,
            IpDetails,
        )


class LakGatewayServiceStub(betterproto.ServiceStub):
    async def session_action__update(
        self, *, metadata: Optional["LakGatewayInputMetadata"] = None
    ) -> AsyncGenerator[LakGatewayStatus, None]:
        request = LakGatewayInputEmpty()
        if metadata is not None:
            request.metadata = metadata

        async for response in self._unary_stream(
            "/grpc.api.v1.LakGatewayService/SessionAction_Update",
            request,
            LakGatewayStatus,
        ):
            yield response
