"""
File containing all linking classes for many-many relations in the BO4E version
"""
import uuid as uuid_pkg
from typing import Optional

from sqlalchemy import Column, ForeignKey
from sqlalchemy.dialects.postgresql import UUID
from sqlmodel import Field, SQLModel

{%- for class1, class_list in class.items() %}
{%- for class2 in class_list %}
class {{class1}}{{class2[1]}}Link(SQLModel, table=True):
    """
    class linking m-n relation of tables {{class1}} and {{class2[0]}} for field {{ class2[1]}}.
    """
    {{class1.lower()}}_id: Optional[uuid_pkg.UUID] = Field(sa_column=Column(UUID(as_uuid=True), ForeignKey("{{class1.lower()}}.{{class1.lower()}}_sqlid", ondelete="CASCADE"), primary_key=True))
    {{class2[0].lower()}}_id: Optional[uuid_pkg.UUID] = Field(sa_column=Column(UUID(as_uuid=True), ForeignKey("{{class2[0].lower()}}.{{class2[0].lower()}}_sqlid", ondelete="CASCADE"), primary_key=True))

{%- endfor -%}
{%- endfor -%}
