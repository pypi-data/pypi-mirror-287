# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cpublic.proto\x12\x0bwirepas.wpe\x1a\x0cnanopb.proto\"\xdb\x01\n\x08MeshData\x12\x0e\n\x06source\x18\x01 \x01(\x04\x12\x0f\n\x07network\x18\x02 \x01(\x04\x12\x0c\n\x04sink\x18\x03 \x01(\x04\x12\x0f\n\x07version\x18\x04 \x01(\x02\x12\x10\n\x08sequence\x18\x05 \x01(\r\x12\x13\n\x0btravel_time\x18\x06 \x01(\x02\x12\x11\n\ttimestamp\x18\x07 \x01(\x04\x12\x34\n\x07payload\x18\x08 \x03(\x0b\x32\x1c.wirepas.wpe.MeasurementDataB\x05\x92?\x02\x10\x1e\x12\x1f\n\x17use_strongest_neighbors\x18\x14 \x01(\r\"\xba\x02\n\x0fMeasurementData\x12\x31\n\x04type\x18\x01 \x01(\x0e\x32#.wirepas.wpe.MeasurementData.DOMAIN\x12\x0e\n\x06target\x18\x02 \x01(\x04\x12\r\n\x05value\x18\x03 \x01(\x02\x12\x0c\n\x04time\x18\x04 \x01(\x02\"\xc6\x01\n\x06\x44OMAIN\x12\x0c\n\x08POWER_SR\x10\x00\x12\x0c\n\x08POWER_HR\x10\x01\x12\x08\n\x04TIME\x10\x02\x12\t\n\x05SPACE\x10\x03\x12\x1a\n\x16POWER_SR_32BIT_ADDRESS\x10\x05\x12\x11\n\rPOWER_SR_RSSI\x10\n\x12\x11\n\rPOWER_HR_RSSI\x10\x0b\x12\x0b\n\x06IGNORE\x10\xf0\x01\x12\x14\n\x0fPOWER_SR_ANCHOR\x10\xf0\x01\x12\"\n\x1dPOWER_SR_ANCHOR_32BIT_ADDRESS\x10\xf5\x01\x1a\x02\x10\x01\"\x8d\x01\n\x11\x43onfigurationData\x12\x0f\n\x07network\x18\x01 \x01(\x04\x12 \n\x05nodes\x18\x02 \x03(\x0b\x32\x11.wirepas.wpe.Node\x12 \n\x05\x61reas\x18\x03 \x03(\x0b\x32\x11.wirepas.wpe.Area\x12\x12\n\nrequest_id\x18\x64 \x01(\t\x12\x0f\n\x06sender\x18\xc8\x01 \x01(\t\"\xe3\x02\n\x04Node\x12\x10\n\x08sequence\x18\x01 \x01(\r\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\x04\x12\x0f\n\x07network\x18\x03 \x01(\x04\x12(\n\x04role\x18\x04 \x01(\x0e\x32\x1a.wirepas.wpe.Node.BASEROLE\x12\'\n\x0b\x63oordinates\x18\x05 \x01(\x0b\x32\x12.wirepas.wpe.Point\x12\x17\n\x0f\x61rea_identifier\x18\x06 \x03(\x04\x12\x16\n\x0egeo_identifier\x18\x07 \x03(\t\x12\x0c\n\x04sink\x18\x08 \x01(\x04\x12\x11\n\ttimestamp\x18\n \x01(\x04\x12\x16\n\x0emap_identifier\x18\x64 \x01(\t\x12\x0f\n\x06sender\x18\xc8\x01 \x01(\t\x12\x1b\n\x12measurement_offset\x18\xf4\x03 \x01(\x02\"<\n\x08\x42\x41SEROLE\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04SINK\x10\x01\x12\x0c\n\x08HEADNODE\x10\x02\x12\x0b\n\x07SUBNODE\x10\x03\"\x91\x01\n\x04\x41rea\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03uid\x18\x02 \x01(\x04\x12\r\n\x05\x66loor\x18\x03 \x01(\x04\x12\x10\n\x08\x62uilding\x18\x04 \x01(\x04\x12\'\n\x0b\x63oordinates\x18\x05 \x03(\x0b\x32\x12.wirepas.wpe.Point\x12\x0c\n\x04uuid\x18\x06 \x01(\t\x12\x16\n\x0emap_identifier\x18\x07 \x01(\t\"\x82\x01\n\x05Point\x12\'\n\x05geoid\x18\x01 \x01(\x0e\x32\x18.wirepas.wpe.Point.GEOID\x12\x0b\n\x03lla\x18\x02 \x03(\x02\x12\x13\n\x0blla_precise\x18\x03 \x03(\x01\x12\x1a\n\x12lla_precise_anchor\x18\x04 \x03(\x01\"\x12\n\x05GEOID\x12\t\n\x05WGS84\x10\x00\"\xf8\x01\n\x06Status\x12&\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x18.wirepas.wpe.Status.CODE\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12\x12\n\nservice_id\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x05 \x01(\x04\x12\x0f\n\x07message\x18\n \x01(\t\x12\x12\n\nrequest_id\x18\x64 \x03(\t\x12\x0f\n\x06sender\x18\xc8\x01 \x01(\t\"R\n\x04\x43ODE\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\t\n\x05\x45RROR\x10\x02\x12\x0b\n\x07INSDATA\x10\x03\x12\x0b\n\x07STARTED\x10\x04\x12\x0b\n\x07STOPPED\x10\x05\"\xa5\x01\n\x05Query\x12\x14\n\x0c\x66orce_update\x18\x01 \x01(\x08\x12\x15\n\rsubscriber_id\x18\x02 \x01(\t\x12\x18\n\x10send_node_status\x18\x03 \x01(\x08\x12\x0f\n\x07network\x18\x04 \x01(\r\x12\x0f\n\x07node_id\x18\x05 \x03(\x04\x12\x0f\n\x07\x61rea_id\x18\x06 \x03(\x04\x12\x11\n\tarea_uuid\x18\x07 \x03(\t\x12\x0f\n\x06sender\x18\xc8\x01 \x01(\t\"\x92\x01\n\x03Log\x12\x0c\n\x04time\x18\x01 \x01(\x02\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x0e\n\x06sender\x18\x03 \x01(\t\x12\r\n\x05level\x18\x04 \x01(\r\x12\x11\n\ttimestamp\x18\x05 \x01(\x04\":\n\x0b\x44\x45\x42UG_LEVEL\x12\t\n\x05\x44\x45\x42UG\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x0b\n\x07WARNING\x10\x02\x12\x08\n\x04INFO\x10\x03\"\x07\n\x05\x45mpty2\xff\x03\n\x0c\x66low_manager\x12/\n\x04stop\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x31\n\x06status\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x30\n\x05purge\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x42\n\tconfigure\x12\x1e.wirepas.wpe.ConfigurationData\x1a\x13.wirepas.wpe.Status(\x01\x12;\n\x05\x66\x65tch\x12\x12.wirepas.wpe.Query\x1a\x1e.wirepas.wpe.ConfigurationData\x12\x36\n\x06locate\x12\x15.wirepas.wpe.MeshData\x1a\x11.wirepas.wpe.Node(\x01\x30\x01\x12\x34\n\tsubscribe\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x36\n\x0bunsubscribe\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x32\n\x07observe\x12\x12.wirepas.wpe.Query\x1a\x11.wirepas.wpe.Node0\x01\x32\xa4\x01\n\x0blog_manager\x12/\n\x04stop\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x31\n\x06status\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x31\n\x06record\x12\x10.wirepas.wpe.Log\x1a\x13.wirepas.wpe.Status(\x01\x32\xaa\x01\n\x12subscriber_manager\x12/\n\x04stop\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x31\n\x06status\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.Status\x12\x30\n\x05\x66\x65tch\x12\x12.wirepas.wpe.Query\x1a\x13.wirepas.wpe.StatusB\x13\n\x0f\x63om.wirepas.wpeH\x01')



_MESHDATA = DESCRIPTOR.message_types_by_name['MeshData']
_MEASUREMENTDATA = DESCRIPTOR.message_types_by_name['MeasurementData']
_CONFIGURATIONDATA = DESCRIPTOR.message_types_by_name['ConfigurationData']
_NODE = DESCRIPTOR.message_types_by_name['Node']
_AREA = DESCRIPTOR.message_types_by_name['Area']
_POINT = DESCRIPTOR.message_types_by_name['Point']
_STATUS = DESCRIPTOR.message_types_by_name['Status']
_QUERY = DESCRIPTOR.message_types_by_name['Query']
_LOG = DESCRIPTOR.message_types_by_name['Log']
_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_MEASUREMENTDATA_DOMAIN = _MEASUREMENTDATA.enum_types_by_name['DOMAIN']
_NODE_BASEROLE = _NODE.enum_types_by_name['BASEROLE']
_POINT_GEOID = _POINT.enum_types_by_name['GEOID']
_STATUS_CODE = _STATUS.enum_types_by_name['CODE']
_LOG_DEBUG_LEVEL = _LOG.enum_types_by_name['DEBUG_LEVEL']
MeshData = _reflection.GeneratedProtocolMessageType('MeshData', (_message.Message,), {
  'DESCRIPTOR' : _MESHDATA,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.MeshData)
  })
_sym_db.RegisterMessage(MeshData)

MeasurementData = _reflection.GeneratedProtocolMessageType('MeasurementData', (_message.Message,), {
  'DESCRIPTOR' : _MEASUREMENTDATA,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.MeasurementData)
  })
_sym_db.RegisterMessage(MeasurementData)

ConfigurationData = _reflection.GeneratedProtocolMessageType('ConfigurationData', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONDATA,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.ConfigurationData)
  })
_sym_db.RegisterMessage(ConfigurationData)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {
  'DESCRIPTOR' : _NODE,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Node)
  })
_sym_db.RegisterMessage(Node)

Area = _reflection.GeneratedProtocolMessageType('Area', (_message.Message,), {
  'DESCRIPTOR' : _AREA,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Area)
  })
_sym_db.RegisterMessage(Area)

Point = _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), {
  'DESCRIPTOR' : _POINT,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Point)
  })
_sym_db.RegisterMessage(Point)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
  'DESCRIPTOR' : _STATUS,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Status)
  })
_sym_db.RegisterMessage(Status)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Query)
  })
_sym_db.RegisterMessage(Query)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
  'DESCRIPTOR' : _LOG,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Log)
  })
_sym_db.RegisterMessage(Log)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'public_pb2'
  # @@protoc_insertion_point(class_scope:wirepas.wpe.Empty)
  })
_sym_db.RegisterMessage(Empty)

_FLOW_MANAGER = DESCRIPTOR.services_by_name['flow_manager']
_LOG_MANAGER = DESCRIPTOR.services_by_name['log_manager']
_SUBSCRIBER_MANAGER = DESCRIPTOR.services_by_name['subscriber_manager']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\017com.wirepas.wpeH\001'
  _MESHDATA.fields_by_name['payload']._options = None
  _MESHDATA.fields_by_name['payload']._serialized_options = b'\222?\002\020\036'
  _MEASUREMENTDATA_DOMAIN._options = None
  _MEASUREMENTDATA_DOMAIN._serialized_options = b'\020\001'
  _MESHDATA._serialized_start=44
  _MESHDATA._serialized_end=263
  _MEASUREMENTDATA._serialized_start=266
  _MEASUREMENTDATA._serialized_end=580
  _MEASUREMENTDATA_DOMAIN._serialized_start=382
  _MEASUREMENTDATA_DOMAIN._serialized_end=580
  _CONFIGURATIONDATA._serialized_start=583
  _CONFIGURATIONDATA._serialized_end=724
  _NODE._serialized_start=727
  _NODE._serialized_end=1082
  _NODE_BASEROLE._serialized_start=1022
  _NODE_BASEROLE._serialized_end=1082
  _AREA._serialized_start=1085
  _AREA._serialized_end=1230
  _POINT._serialized_start=1233
  _POINT._serialized_end=1363
  _POINT_GEOID._serialized_start=1345
  _POINT_GEOID._serialized_end=1363
  _STATUS._serialized_start=1366
  _STATUS._serialized_end=1614
  _STATUS_CODE._serialized_start=1532
  _STATUS_CODE._serialized_end=1614
  _QUERY._serialized_start=1617
  _QUERY._serialized_end=1782
  _LOG._serialized_start=1785
  _LOG._serialized_end=1931
  _LOG_DEBUG_LEVEL._serialized_start=1873
  _LOG_DEBUG_LEVEL._serialized_end=1931
  _EMPTY._serialized_start=1933
  _EMPTY._serialized_end=1940
  _FLOW_MANAGER._serialized_start=1943
  _FLOW_MANAGER._serialized_end=2454
  _LOG_MANAGER._serialized_start=2457
  _LOG_MANAGER._serialized_end=2621
  _SUBSCRIBER_MANAGER._serialized_start=2624
  _SUBSCRIBER_MANAGER._serialized_end=2794
# @@protoc_insertion_point(module_scope)
