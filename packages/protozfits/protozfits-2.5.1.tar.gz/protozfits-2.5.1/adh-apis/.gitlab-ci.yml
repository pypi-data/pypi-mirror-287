variables:
  # make sure the CI system checks out the submodules
  GIT_SUBMODULE_STRATEGY: recursive


alma9:
  image: almalinux:9
  # make sure we only use the correct runner
  tags:
    - kubernetes

  before_script:
    # install build dependencies
    - dnf install -y 'dnf-command(config-manager)'
    - dnf config-manager -y --set-enabled crb
    - dnf install -y epel-release 
    - dnf install -y cmake make gcc gcc-c++ protobuf-devel protobuf-compiler zeromq-devel

  script:
    # build
    - cmake -S . -B build -DCMAKE_INSTALL_PREFIX=$HOME/.local/adh-apis -DPYTHON=OFF -DCMAKE_CXX_STANDARD=17
    - cmake --build build -- -j 2
    - cmake --install build

    # run tests
    - ctest --output-on-failure --test-dir build

    # test building the downstream project (testing the cmake exports)
    - cd examples
    - CMAKE_PREFIX_PATH=$HOME/.local/adh-apis cmake -S . -B build
    - cmake --build build
    - ./build/main

ubuntu20:
  image: ubuntu:22.04

  # make sure we only use the correct runner
  tags:
    - kubernetes

  variables:
    # needed to avoid interactive prompts during installation
    DEBIAN_FRONTEND: "noninteractive"

  before_script:
    # install build dependencies
    - apt update && apt install -y cmake build-essential libzmq3-dev libprotobuf-dev protobuf-compiler

  script:
    - cmake -S . -B build -DCMAKE_INSTALL_PREFIX=$HOME/.local/adh-apis
    - cmake --build build -- -j 2
    - cmake --install build

    # run tests
    - ctest --output-on-failure --test-dir build

    # test building the downstream project (testing the cmake exports)
    - cd examples
    - CMAKE_PREFIX_PATH=$HOME/.local/adh-apis cmake -S . -B build
    - cmake --build build
    - ./build/main
