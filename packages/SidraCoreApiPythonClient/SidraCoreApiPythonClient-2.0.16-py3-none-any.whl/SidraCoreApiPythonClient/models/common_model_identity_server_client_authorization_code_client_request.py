# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CommonModelIdentityServerClientAuthorizationCodeClientRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_name': 'str',
        'client_scopes': 'list[str]',
        'api_resources': 'list[str]',
        'redirect_uris': 'list[str]',
        'post_logout_redirect_uris': 'list[str]',
        'cors_origins': 'list[str]'
    }

    attribute_map = {
        'client_name': 'clientName',
        'client_scopes': 'clientScopes',
        'api_resources': 'apiResources',
        'redirect_uris': 'redirectUris',
        'post_logout_redirect_uris': 'postLogoutRedirectUris',
        'cors_origins': 'corsOrigins'
    }

    def __init__(self, client_name=None, client_scopes=None, api_resources=None, redirect_uris=None, post_logout_redirect_uris=None, cors_origins=None):  # noqa: E501
        """CommonModelIdentityServerClientAuthorizationCodeClientRequest - a model defined in Swagger"""  # noqa: E501
        self._client_name = None
        self._client_scopes = None
        self._api_resources = None
        self._redirect_uris = None
        self._post_logout_redirect_uris = None
        self._cors_origins = None
        self.discriminator = None
        if client_name is not None:
            self.client_name = client_name
        if client_scopes is not None:
            self.client_scopes = client_scopes
        if api_resources is not None:
            self.api_resources = api_resources
        if redirect_uris is not None:
            self.redirect_uris = redirect_uris
        if post_logout_redirect_uris is not None:
            self.post_logout_redirect_uris = post_logout_redirect_uris
        if cors_origins is not None:
            self.cors_origins = cors_origins

    @property
    def client_name(self):
        """Gets the client_name of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The client_name of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: str
        """
        return self._client_name

    @client_name.setter
    def client_name(self, client_name):
        """Sets the client_name of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param client_name: The client_name of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: str
        """

        self._client_name = client_name

    @property
    def client_scopes(self):
        """Gets the client_scopes of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The client_scopes of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._client_scopes

    @client_scopes.setter
    def client_scopes(self, client_scopes):
        """Sets the client_scopes of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param client_scopes: The client_scopes of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: list[str]
        """

        self._client_scopes = client_scopes

    @property
    def api_resources(self):
        """Gets the api_resources of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The api_resources of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._api_resources

    @api_resources.setter
    def api_resources(self, api_resources):
        """Sets the api_resources of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param api_resources: The api_resources of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: list[str]
        """

        self._api_resources = api_resources

    @property
    def redirect_uris(self):
        """Gets the redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._redirect_uris

    @redirect_uris.setter
    def redirect_uris(self, redirect_uris):
        """Sets the redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param redirect_uris: The redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: list[str]
        """

        self._redirect_uris = redirect_uris

    @property
    def post_logout_redirect_uris(self):
        """Gets the post_logout_redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The post_logout_redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._post_logout_redirect_uris

    @post_logout_redirect_uris.setter
    def post_logout_redirect_uris(self, post_logout_redirect_uris):
        """Sets the post_logout_redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param post_logout_redirect_uris: The post_logout_redirect_uris of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: list[str]
        """

        self._post_logout_redirect_uris = post_logout_redirect_uris

    @property
    def cors_origins(self):
        """Gets the cors_origins of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501


        :return: The cors_origins of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :rtype: list[str]
        """
        return self._cors_origins

    @cors_origins.setter
    def cors_origins(self, cors_origins):
        """Sets the cors_origins of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.


        :param cors_origins: The cors_origins of this CommonModelIdentityServerClientAuthorizationCodeClientRequest.  # noqa: E501
        :type: list[str]
        """

        self._cors_origins = cors_origins

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CommonModelIdentityServerClientAuthorizationCodeClientRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CommonModelIdentityServerClientAuthorizationCodeClientRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
